{"ast":null,"code":"import { GET_MEMBERS, GET_MEMBERS_SUCCESS, GET_CHATS, GET_CHATS_SUCCESS, SEARCH_MEMBER, CHANGE_CHAT, CREATE_CHAT, SEND_MESSAGE, UPDATE_STATUS, UPDATE_SELECTED_USER, REPLY_BY_SELECTED_USER } from '../constant/actionTypes';\nimport contactsData from '../data/chat/chatMember';\nimport chatsData from \"../data/chat/chat.chats.json\";\nconst initial_state = {\n  allMembers: null,\n  members: null,\n  chats: chatsData,\n  error: '',\n  searchKeyword: '',\n  loading: false,\n  currentUser: null,\n  selectedUser: null,\n  online: true,\n  updateSelectedUser: null\n};\nexport default ((state = initial_state, action) => {\n  switch (action.type) {\n    case GET_MEMBERS:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_MEMBERS_SUCCESS:\n      const members = contactsData;\n      const currentUser = members[0];\n      return { ...state,\n        loading: false,\n        allMembers: members,\n        members: members,\n        currentUser: currentUser\n      };\n\n    case GET_CHATS:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_CHATS_SUCCESS:\n      return { ...state,\n        loading: false,\n        chats: action.payload.chats,\n        selectedUser: state.allMembers.find(x => x.id === action.payload.selectedUser)\n      };\n\n    case UPDATE_SELECTED_USER:\n      return { ...state,\n        updateSelectedUser: state.allMembers.find(x => x.id === action.payload.selectedUser)\n      };\n\n    case CHANGE_CHAT:\n      return { ...state,\n        selectedUser: state.allMembers.find(x => x.id === action.payload)\n      };\n\n    case SEARCH_MEMBER:\n      if (action.payload === '') {\n        return { ...state,\n          members: state.allMembers\n        };\n      } else {\n        const keyword = action.payload.toLowerCase();\n        const searchedMembers = state.allMembers.filter(member => member.name.toLowerCase().indexOf(keyword) > -1);\n        return { ...state,\n          members: searchedMembers\n        };\n      }\n\n    case SEND_MESSAGE:\n      return { ...state\n      };\n\n    case REPLY_BY_SELECTED_USER:\n      return { ...state\n      };\n\n    case CREATE_CHAT:\n      return { ...state\n      };\n\n    case UPDATE_STATUS:\n      return { ...state,\n        currentUser: { ...state.currentUser,\n          status: action.payload\n        }\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/reducers/chat.reducer.js"],"names":["GET_MEMBERS","GET_MEMBERS_SUCCESS","GET_CHATS","GET_CHATS_SUCCESS","SEARCH_MEMBER","CHANGE_CHAT","CREATE_CHAT","SEND_MESSAGE","UPDATE_STATUS","UPDATE_SELECTED_USER","REPLY_BY_SELECTED_USER","contactsData","chatsData","initial_state","allMembers","members","chats","error","searchKeyword","loading","currentUser","selectedUser","online","updateSelectedUser","state","action","type","payload","find","x","id","keyword","toLowerCase","searchedMembers","filter","member","name","indexOf","status"],"mappings":"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","sourcesContent":["import {\n    GET_MEMBERS,\n    GET_MEMBERS_SUCCESS,\n    GET_CHATS,\n    GET_CHATS_SUCCESS,\n    SEARCH_MEMBER,\n    CHANGE_CHAT,\n    CREATE_CHAT,\n    SEND_MESSAGE,\n    UPDATE_STATUS,\n    UPDATE_SELECTED_USER,\n    REPLY_BY_SELECTED_USER\n} from '../constant/actionTypes';\n\nimport contactsData from '../data/chat/chatMember'\nimport chatsData from \"../data/chat/chat.chats.json\";\n\nconst initial_state = {\n    allMembers: null,\n    members: null,\n    chats: chatsData,\n    error: '',\n    searchKeyword: '',\n    loading: false,\n    currentUser: null,\n    selectedUser: null,\n    online: true,\n    updateSelectedUser: null\n};\n\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case GET_MEMBERS:\n            return { ...state, loading: true };\n\n        case GET_MEMBERS_SUCCESS:\n            const members = contactsData;\n            const currentUser = members[0];\n            return { ...state, loading: false, allMembers: members, members: members, currentUser: currentUser };\n\n        case GET_CHATS:\n            return { ...state, loading: true };\n\n        case GET_CHATS_SUCCESS:\n            return { ...state, loading: false, chats: action.payload.chats, selectedUser: state.allMembers.find(x => x.id === action.payload.selectedUser) };\n\n        case UPDATE_SELECTED_USER:\n            return { ...state, updateSelectedUser: state.allMembers.find(x => x.id === action.payload.selectedUser) }\n\n        case CHANGE_CHAT:\n            return { ...state, selectedUser: state.allMembers.find(x => x.id === action.payload) };\n\n        case SEARCH_MEMBER:\n            if (action.payload === '') {\n                return { ...state, members: state.allMembers };\n            } else {\n                const keyword = action.payload.toLowerCase();\n                const searchedMembers = state.allMembers.filter((member) => member.name.toLowerCase().indexOf(keyword) > -1);\n                return { ...state, members: searchedMembers }\n            }\n\n        case SEND_MESSAGE:\n            return { ...state };\n\n        case REPLY_BY_SELECTED_USER:\n            return { ...state };\n\n        case CREATE_CHAT:\n            return { ...state };\n\n        case UPDATE_STATUS:\n            return { ...state, currentUser: { ...state.currentUser, status: action.payload } };\n\n        default: return { ...state };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}