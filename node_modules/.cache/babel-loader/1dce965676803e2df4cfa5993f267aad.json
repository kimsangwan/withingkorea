{"ast":null,"code":"/* (The MIT License)\r\n *\r\n * Copyright (c) 2012 Brandon Benvie <http://bbenvie.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\r\n * associated documentation files (the 'Software'), to deal in the Software without restriction,\r\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\r\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included with all copies or\r\n * substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\r\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY  CLAIM,\r\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n// Original WeakMap implementation by Gozala @ https://gist.github.com/1269991\n// Updated and bugfixed by Raynos @ https://gist.github.com/1638059\n// Expanded by Benvie @ https://github.com/Benvie/harmony-collections\nvoid function (global, undefined_, undefined) {\n  var getProps = Object.getOwnPropertyNames,\n      defProp = Object.defineProperty,\n      toSource = Function.prototype.toString,\n      create = Object.create,\n      hasOwn = Object.prototype.hasOwnProperty,\n      funcName = /^\\n?function\\s?(\\w*)?_?\\(/;\n\n  function define(object, key, value) {\n    if (typeof key === 'function') {\n      value = key;\n      key = nameOf(value).replace(/_$/, '');\n    }\n\n    return defProp(object, key, {\n      configurable: true,\n      writable: true,\n      value: value\n    });\n  }\n\n  function nameOf(func) {\n    return typeof func !== 'function' ? '' : 'name' in func ? func.name : toSource.call(func).match(funcName)[1];\n  } // ############\n  // ### Data ###\n  // ############\n\n\n  var Data = function () {\n    var dataDesc = {\n      value: {\n        writable: true,\n        value: undefined\n      }\n    },\n        datalock = 'return function(k){if(k===s)return l}',\n        uids = create(null),\n        createUID = function () {\n      var key = Math.random().toString(36).slice(2);\n      return key in uids ? createUID() : uids[key] = key;\n    },\n        globalID = createUID(),\n        storage = function (obj) {\n      if (hasOwn.call(obj, globalID)) return obj[globalID];\n      if (!Object.isExtensible(obj)) throw new TypeError(\"Object must be extensible\");\n      var store = create(null);\n      defProp(obj, globalID, {\n        value: store\n      });\n      return store;\n    }; // common per-object storage area made visible by patching getOwnPropertyNames'\n\n\n    define(Object, function getOwnPropertyNames(obj) {\n      var props = getProps(obj);\n      if (hasOwn.call(obj, globalID)) props.splice(props.indexOf(globalID), 1);\n      return props;\n    });\n\n    function Data() {\n      var puid = createUID(),\n          secret = {};\n\n      this.unlock = function (obj) {\n        var store = storage(obj);\n        if (hasOwn.call(store, puid)) return store[puid](secret);\n        var data = create(null, dataDesc);\n        defProp(store, puid, {\n          value: new Function('s', 'l', datalock)(secret, data)\n        });\n        return data;\n      };\n    }\n\n    define(Data.prototype, function get(o) {\n      return this.unlock(o).value;\n    });\n    define(Data.prototype, function set(o, v) {\n      this.unlock(o).value = v;\n    });\n    return Data;\n  }();\n\n  var WM = function (data) {\n    var validate = function (key) {\n      if (key == null || typeof key !== 'object' && typeof key !== 'function') throw new TypeError(\"Invalid WeakMap key\");\n    };\n\n    var wrap = function (collection, value) {\n      var store = data.unlock(collection);\n      if (store.value) throw new TypeError(\"Object is already a WeakMap\");\n      store.value = value;\n    };\n\n    var unwrap = function (collection) {\n      var storage = data.unlock(collection).value;\n      if (!storage) throw new TypeError(\"WeakMap is not generic\");\n      return storage;\n    };\n\n    var initialize = function (weakmap, iterable) {\n      if (iterable !== null && typeof iterable === 'object' && typeof iterable.forEach === 'function') {\n        iterable.forEach(function (item, i) {\n          if (item instanceof Array && item.length === 2) set.call(weakmap, iterable[i][0], iterable[i][1]);\n        });\n      }\n    };\n\n    function WeakMap(iterable) {\n      if (this === global || this == null || this === WeakMap.prototype) return new WeakMap(iterable);\n      wrap(this, new Data());\n      initialize(this, iterable);\n    }\n\n    function get(key) {\n      validate(key);\n      var value = unwrap(this).get(key);\n      return value === undefined_ ? undefined : value;\n    }\n\n    function set(key, value) {\n      validate(key); // store a token for explicit undefined so that \"has\" works correctly\n\n      unwrap(this).set(key, value === undefined ? undefined_ : value);\n    }\n\n    function has(key) {\n      validate(key);\n      return unwrap(this).get(key) !== undefined;\n    }\n\n    function delete_(key) {\n      validate(key);\n      var data = unwrap(this),\n          had = data.get(key) !== undefined;\n      data.set(key, undefined);\n      return had;\n    }\n\n    function toString() {\n      unwrap(this);\n      return '[object WeakMap]';\n    }\n\n    try {\n      var src = ('return ' + delete_).replace('e_', '\\\\u0065'),\n          del = new Function('unwrap', 'validate', src)(unwrap, validate);\n    } catch (e) {\n      var del = delete_;\n    }\n\n    var src = ('' + Object).split('Object');\n\n    var stringifier = function toString() {\n      return src[0] + nameOf(this) + src[1];\n    };\n\n    define(stringifier, stringifier);\n    var prep = {\n      __proto__: []\n    } instanceof Array ? function (f) {\n      f.__proto__ = stringifier;\n    } : function (f) {\n      define(f, stringifier);\n    };\n    prep(WeakMap);\n    [toString, get, set, has, del].forEach(function (method) {\n      define(WeakMap.prototype, method);\n      prep(method);\n    });\n    return WeakMap;\n  }(new Data());\n\n  var defaultCreator = Object.create ? function () {\n    return Object.create(null);\n  } : function () {\n    return {};\n  };\n\n  function createStorage(creator) {\n    var weakmap = new WM();\n    creator || (creator = defaultCreator);\n\n    function storage(object, value) {\n      if (value || arguments.length === 2) {\n        weakmap.set(object, value);\n      } else {\n        value = weakmap.get(object);\n\n        if (value === undefined) {\n          value = creator(object);\n          weakmap.set(object, value);\n        }\n      }\n\n      return value;\n    }\n\n    return storage;\n  }\n\n  if (typeof module !== 'undefined') {\n    module.exports = WM;\n  } else if (typeof exports !== 'undefined') {\n    exports.WeakMap = WM;\n  } else if (!('WeakMap' in global)) {\n    global.WeakMap = WM;\n  }\n\n  WM.createStorage = createStorage;\n  if (global.WeakMap) global.WeakMap.createStorage = createStorage;\n}((0, eval)('this'));","map":null,"metadata":{},"sourceType":"script"}