{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\"; // middlewares\n\nimport thunkMiddleware from \"redux-thunk\";\nimport promiseMiddleware from \"redux-promise\"; // import logger from 'redux-logger'\n// Import custom components\n\nimport reducers from \"../reducers/index\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    return undefined;\n  }\n}\n/**\n * Create a Redux store that holds the app state.\n */\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunkMiddleware, promiseMiddleware), //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\nwindow.devToolsExtension ? window.devToolsExtension() : function (f) {\n  return f;\n})); // eslint-disable-next-line\n\nconst unsubscribe = store.subscribe(() => {\n  const state = store.getState();\n  saveToLocalStorage(state);\n});\nexport default store;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/store/index.jsx"],"names":["createStore","applyMiddleware","compose","thunkMiddleware","promiseMiddleware","reducers","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","undefined","store","window","devToolsExtension","f","unsubscribe","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,eAA9B,C,CACA;AAEA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,OAAOK,CAAP,EAAU;AACV,WAAOC,SAAP;AACD;AACF;AAED;;;;;AAGA,MAAMC,KAAK,GAAGf,WAAW,CACvBK,QADuB,EAEvBH,OAAO,CACLD,eAAe,CAACE,eAAD,EAAkBC,iBAAlB,CADV,EAGL;AACAY,MAAM,CAACC,iBAAP,GACID,MAAM,CAACC,iBAAP,EADJ,GAEI,UAASC,CAAT,EAAY;AACV,SAAOA,CAAP;AACD,CARA,CAFgB,CAAzB,C,CAaA;;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAN,CAAgB,MAAM;AACxC,QAAMb,KAAK,GAAGQ,KAAK,CAACM,QAAN,EAAd;AACAf,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACD,CAHmB,CAApB;AAKA,eAAeQ,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\"\n\n// middlewares\nimport thunkMiddleware from \"redux-thunk\"\nimport promiseMiddleware from \"redux-promise\"\n// import logger from 'redux-logger'\n\n// Import custom components\nimport reducers from \"../reducers/index\"\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(\"state\", serializedState)\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Create a Redux store that holds the app state.\n */\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware),\n\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\n    window.devToolsExtension\n      ? window.devToolsExtension()\n      : function(f) {\n          return f\n        }\n  )\n)\n// eslint-disable-next-line\nconst unsubscribe = store.subscribe(() => {\n  const state = store.getState()\n  saveToLocalStorage(state)\n})\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}