{"ast":null,"code":"import _objectWithoutProperties from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/map/leafletMap.js\";\nimport React, { Fragment, useState } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport { Map as LeafletMap, TileLayer, GeoJSON, Marker, Popup } from 'react-leaflet';\nimport WorldData from 'world-map-geojson';\n\nconst LeafletMapComp = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        animate = _useState2[0],\n        setAnimate = _useState2[1];\n\n  const _useState3 = useState({\n    lat: 51.505,\n    lng: -0.09\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        latlan = _useState4[0],\n        setlatlan = _useState4[1];\n\n  const markers = [{\n    key: 'marker1',\n    position: [51.5, -0.1],\n    content: 'My first popup'\n  }, {\n    key: 'marker2',\n    position: [51.51, -0.1],\n    content: 'My second popup'\n  }, {\n    key: 'marker3',\n    position: [51.49, -0.05],\n    content: 'My third popup'\n  }];\n\n  const handleClick = e => {\n    setlatlan({\n      latlng: e.latlng\n    });\n  };\n\n  const toggleAnimate = () => {\n    setAnimate({\n      animate: !animate\n    });\n  };\n\n  const MyPopupMarker = ({\n    content,\n    position\n  }) => React.createElement(Marker, {\n    position: position,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, content));\n\n  const MyMarkersList = ({\n    markers\n  }) => {\n    const items = markers.map((_ref) => {\n      let key = _ref.key,\n          props = _objectWithoutProperties(_ref, [\"key\"]);\n\n      return React.createElement(MyPopupMarker, Object.assign({\n        key: key\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, items);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    title: \"Leaflet Maps\",\n    parent: \"Maps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-xl-6 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Basic Demo\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"gmap-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(LeafletMap, {\n    center: [50, 10],\n    zoom: 6,\n    maxZoom: 10,\n    attributionControl: true,\n    zoomControl: true,\n    doubleClickZoom: true,\n    scrollWheelZoom: true,\n    dragging: true,\n    animate: true,\n    easeLinearity: 0.35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    position: [50, 10],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Popup for any custom information.\"))))))), React.createElement(\"div\", {\n    className: \"col-xl-6 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"GeoJsonMap Demo\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"gmap-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(LeafletMap, {\n    center: [50, 10],\n    zoom: 6,\n    maxZoom: 10,\n    attributionControl: true,\n    zoomControl: true,\n    doubleClickZoom: true,\n    scrollWheelZoom: true,\n    dragging: true,\n    animate: true,\n    easeLinearity: 0.35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(GeoJSON, {\n    data: WorldData,\n    style: () => ({\n      color: '#4a83ec',\n      weight: 0.5,\n      fillColor: \"#1a1d62\",\n      fillOpacity: 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    position: [50, 10],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Popup for any custom information.\"))))))), React.createElement(\"div\", {\n    className: \"col-xl-6 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Animate Map\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"checkIt\",\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    checked: animate,\n    onChange: toggleAnimate,\n    type: \"checkbox\",\n    id: \"checkIt\",\n    className: \"checkbox_animated\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), \"Animate panning\"), React.createElement(LeafletMap, {\n    animate: animate,\n    center: latlan,\n    length: 4,\n    onClick: handleClick,\n    zoom: 13,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: \"col-xl-6 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Set Marker with Popup\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(LeafletMap, {\n    center: [51.505, -0.09],\n    zoom: 13,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(MyMarkersList, {\n    markers: markers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))))))));\n};\n\nexport default LeafletMapComp;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/map/leafletMap.js"],"names":["React","Fragment","useState","Breadcrumb","Map","LeafletMap","TileLayer","GeoJSON","Marker","Popup","WorldData","LeafletMapComp","animate","setAnimate","lat","lng","latlan","setlatlan","markers","key","position","content","handleClick","e","latlng","toggleAnimate","MyPopupMarker","MyMarkersList","items","map","props","color","weight","fillColor","fillOpacity"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport { Map as LeafletMap, TileLayer, GeoJSON, Marker, Popup } from 'react-leaflet';\nimport WorldData from 'world-map-geojson';\n\nconst LeafletMapComp = () => {\n    const [animate, setAnimate] = useState(false);\n    const [latlan, setlatlan] = useState({\n        lat: 51.505,\n        lng: -0.09,\n    });\n\n    const markers = [\n        { key: 'marker1', position: [51.5, -0.1], content: 'My first popup' },\n        { key: 'marker2', position: [51.51, -0.1], content: 'My second popup' },\n        { key: 'marker3', position: [51.49, -0.05], content: 'My third popup' },\n    ]\n\n    const handleClick = (e) => {\n        setlatlan({\n            latlng: e.latlng,\n        })\n    }\n\n    const toggleAnimate = () => {\n        setAnimate({\n            animate: !animate,\n        })\n    }\n\n    const MyPopupMarker = ({ content, position }) => (\n        <Marker position={position}>\n            <Popup>{content}</Popup>\n        </Marker>\n    )\n\n    const MyMarkersList = ({ markers }) => {\n        const items = markers.map(({ key, ...props }) => (\n            <MyPopupMarker key={key} {...props} />\n        ))\n        return <Fragment>{items}</Fragment>\n    }\n    return (\n        <Fragment>\n            <Breadcrumb title=\"Leaflet Maps\" parent=\"Maps\" />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-xl-6 col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Basic Demo</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <div id=\"gmap-simple\" >\n                                    <LeafletMap\n                                        center={[50, 10]}\n                                        zoom={6}\n                                        maxZoom={10}\n                                        attributionControl={true}\n                                        zoomControl={true}\n                                        doubleClickZoom={true}\n                                        scrollWheelZoom={true}\n                                        dragging={true}\n                                        animate={true}\n                                        easeLinearity={0.35}\n                                    >\n                                        <TileLayer\n                                            url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                                        />\n                                        <Marker position={[50, 10]}>\n                                            <Popup>\n                                                Popup for any custom information.\n                                        </Popup>\n                                        </Marker>\n                                    </LeafletMap>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6 col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>GeoJsonMap Demo</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <div id=\"gmap-simple\" >\n                                    <LeafletMap\n                                        center={[50, 10]}\n                                        zoom={6}\n                                        maxZoom={10}\n                                        attributionControl={true}\n                                        zoomControl={true}\n                                        doubleClickZoom={true}\n                                        scrollWheelZoom={true}\n                                        dragging={true}\n                                        animate={true}\n                                        easeLinearity={0.35}\n                                    >\n                                        <GeoJSON\n                                            data={WorldData}\n                                            style={() => ({\n                                                color: '#4a83ec',\n                                                weight: 0.5,\n                                                fillColor: \"#1a1d62\",\n                                                fillOpacity: 1,\n                                            })}\n                                        />\n                                        <Marker position={[50, 10]}>\n                                            <Popup>\n                                                Popup for any custom information.\n                                                </Popup>\n                                        </Marker>\n                                    </LeafletMap>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6 col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Animate Map</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <div>\n                                    <label htmlFor=\"checkIt\" className=\"mb-3\">\n                                        <input\n                                            checked={animate}\n                                            onChange={toggleAnimate}\n                                            type=\"checkbox\"\n                                            id=\"checkIt\"\n                                            className=\"checkbox_animated\"\n                                        />\n                                        Animate panning\n                                        </label>\n                                    <LeafletMap\n                                        animate={animate}\n                                        center={latlan}\n                                        length={4}\n                                        onClick={handleClick}\n                                        zoom={13}>\n                                        <TileLayer\n                                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                        />\n                                    </LeafletMap>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-6 col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h5>Set Marker with Popup</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <LeafletMap center={[51.505, -0.09]} zoom={13}>\n                                    <TileLayer\n                                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                    />\n                                    <MyMarkersList markers={markers} />\n                                </LeafletMap>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default LeafletMapComp;"]},"metadata":{},"sourceType":"module"}