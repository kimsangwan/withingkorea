{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/common/datatable.js\";\nimport React, { Component, Fragment } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport class Datatable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectRow = (e, i) => {\n      if (!e.target.checked) {\n        this.setState({\n          checkedValues: this.state.checkedValues.filter((item, j) => i !== item)\n        });\n      } else {\n        this.state.checkedValues.push(i);\n        this.setState({\n          checkedValues: this.state.checkedValues\n        });\n      }\n    };\n\n    this.handleRemoveRow = () => {\n      const selectedValues = this.state.checkedValues;\n      const updatedData = this.state.myData.filter(function (el) {\n        return selectedValues.indexOf(el.id) < 0;\n      });\n      this.setState({\n        myData: updatedData\n      });\n      toast.success(\"Successfully Deleted !\");\n    };\n\n    this.renderEditable = cellInfo => {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: e => {\n          const data = [...this.state.myData];\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n          this.setState({\n            myData: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: this.state.myData[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      checkedValues: [],\n      myData: this.props.myData\n    };\n  }\n\n  Capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  render() {\n    const _this$props = this.props,\n          pageSize = _this$props.pageSize,\n          myClass = _this$props.myClass,\n          multiSelectOption = _this$props.multiSelectOption,\n          pagination = _this$props.pagination;\n    const myData = this.state.myData;\n    const columns = [];\n\n    for (var key in myData[0]) {\n      let editable = this.renderEditable;\n\n      if (key === \"image\") {\n        editable = null;\n      }\n\n      if (key === \"status\") {\n        editable = null;\n      }\n\n      if (key === \"avtar\") {\n        editable = null;\n      }\n\n      if (key === \"vendor\") {\n        editable = null;\n      }\n\n      if (key === \"skill\") {\n        editable = null;\n      }\n\n      if (key === \"user\") {\n        editable = null;\n      }\n\n      columns.push({\n        Header: React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.Capitalize(key.toString())),\n        accessor: key,\n        Cell: editable,\n        style: {\n          textAlign: \"center\"\n        }\n      });\n    }\n\n    if (multiSelectOption === true) {\n      columns.push({\n        Header: React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm btn-delete mb-0 b-r-4\",\n          onClick: e => {\n            if (window.confirm(\"Are you sure you wish to delete this item?\")) this.handleRemoveRow();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Delete\"),\n        id: \"delete\",\n        accessor: str => \"delete\",\n        sortable: false,\n        style: {\n          textAlign: \"center\"\n        },\n        Cell: row => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: row.original.id,\n          defaultChecked: this.state.checkedValues.includes(row.original.id),\n          onChange: e => this.selectRow(e, row.original.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        })))\n      });\n    } else {\n      columns.push({\n        Header: React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"Action\"),\n        id: \"delete\",\n        accessor: str => \"delete\",\n        Cell: row => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          onClick: () => {\n            if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n              let data = myData;\n              data.splice(row.index, 1);\n              this.setState({\n                myData: data\n              });\n            }\n\n            toast.success(\"Successfully Deleted !\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          style: {\n            width: 35,\n            fontSize: 16,\n            padding: 11,\n            color: \"#e4566e\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-pencil\",\n          style: {\n            width: 35,\n            fontSize: 16,\n            padding: 11,\n            color: \"rgb(40, 167, 69)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }))),\n        style: {\n          textAlign: \"center\"\n        },\n        sortable: false\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      data: myData,\n      columns: columns,\n      defaultPageSize: pageSize,\n      className: myClass,\n      showPagination: pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Datatable;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/common/datatable.js"],"names":["React","Component","Fragment","ReactTable","ToastContainer","toast","Datatable","constructor","props","selectRow","e","i","target","checked","setState","checkedValues","state","filter","item","j","push","handleRemoveRow","selectedValues","updatedData","myData","el","indexOf","id","success","renderEditable","cellInfo","backgroundColor","data","index","column","innerHTML","__html","Capitalize","str","charAt","toUpperCase","slice","render","pageSize","myClass","multiSelectOption","pagination","columns","key","editable","Header","toString","accessor","Cell","style","textAlign","window","confirm","sortable","row","original","includes","splice","width","fontSize","padding","color"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport class Datatable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedValues: [],\n      myData: this.props.myData,\n    };\n  }\n\n  selectRow = (e, i) => {\n    if (!e.target.checked) {\n      this.setState({\n        checkedValues: this.state.checkedValues.filter((item, j) => i !== item),\n      });\n    } else {\n      this.state.checkedValues.push(i);\n      this.setState({\n        checkedValues: this.state.checkedValues,\n      });\n    }\n  };\n\n  handleRemoveRow = () => {\n    const selectedValues = this.state.checkedValues;\n    const updatedData = this.state.myData.filter(function (el) {\n      return selectedValues.indexOf(el.id) < 0;\n    });\n    this.setState({\n      myData: updatedData,\n    });\n    toast.success(\"Successfully Deleted !\");\n  };\n\n  renderEditable = (cellInfo) => {\n    return (\n      <div\n        style={{ backgroundColor: \"#fafafa\" }}\n        contentEditable\n        suppressContentEditableWarning\n        onBlur={(e) => {\n          const data = [...this.state.myData];\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n          this.setState({ myData: data });\n        }}\n        dangerouslySetInnerHTML={{\n          __html: this.state.myData[cellInfo.index][cellInfo.column.id],\n        }}\n      />\n    );\n  };\n\n  Capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  render() {\n    const { pageSize, myClass, multiSelectOption, pagination } = this.props;\n    const { myData } = this.state;\n\n    const columns = [];\n    for (var key in myData[0]) {\n      let editable = this.renderEditable;\n      if (key === \"image\") {\n        editable = null;\n      }\n      if (key === \"status\") {\n        editable = null;\n      }\n      if (key === \"avtar\") {\n        editable = null;\n      }\n      if (key === \"vendor\") {\n        editable = null;\n      }\n      if (key === \"skill\") {\n        editable = null;\n      }\n      if (key === \"user\") {\n        editable = null;\n      }\n\n      columns.push({\n        Header: <b>{this.Capitalize(key.toString())}</b>,\n        accessor: key,\n        Cell: editable,\n        style: {\n          textAlign: \"center\",\n        },\n      });\n    }\n\n    if (multiSelectOption === true) {\n      columns.push({\n        Header: (\n          <button\n            className=\"btn btn-danger btn-sm btn-delete mb-0 b-r-4\"\n            onClick={(e) => {\n              if (window.confirm(\"Are you sure you wish to delete this item?\"))\n                this.handleRemoveRow();\n            }}\n          >\n            Delete\n          </button>\n        ),\n        id: \"delete\",\n        accessor: (str) => \"delete\",\n        sortable: false,\n        style: {\n          textAlign: \"center\",\n        },\n        Cell: (row) => (\n          <div>\n            <span>\n              <input\n                type=\"checkbox\"\n                name={row.original.id}\n                defaultChecked={this.state.checkedValues.includes(\n                  row.original.id\n                )}\n                onChange={(e) => this.selectRow(e, row.original.id)}\n              />\n            </span>\n          </div>\n        ),\n      });\n    } else {\n      columns.push({\n        Header: <b>Action</b>,\n        id: \"delete\",\n        accessor: (str) => \"delete\",\n        Cell: (row) => (\n          <div>\n            <span\n              onClick={() => {\n                if (\n                  window.confirm(\"Are you sure you wish to delete this item?\")\n                ) {\n                  let data = myData;\n                  data.splice(row.index, 1);\n                  this.setState({ myData: data });\n                }\n                toast.success(\"Successfully Deleted !\");\n              }}\n            >\n              <i\n                className=\"fa fa-trash\"\n                style={{\n                  width: 35,\n                  fontSize: 16,\n                  padding: 11,\n                  color: \"#e4566e\",\n                }}\n              ></i>\n            </span>\n\n            <span>\n              <i\n                className=\"fa fa-pencil\"\n                style={{\n                  width: 35,\n                  fontSize: 16,\n                  padding: 11,\n                  color: \"rgb(40, 167, 69)\",\n                }}\n              ></i>\n            </span>\n          </div>\n        ),\n        style: {\n          textAlign: \"center\",\n        },\n        sortable: false,\n      });\n    }\n\n    return (\n      <Fragment>\n        <ReactTable\n          data={myData}\n          columns={columns}\n          defaultPageSize={pageSize}\n          className={myClass}\n          showPagination={pagination}\n        />\n        <ToastContainer />\n      </Fragment>\n    );\n  }\n}\n\nexport default Datatable;\n"]},"metadata":{},"sourceType":"module"}