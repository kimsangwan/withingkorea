{"ast":null,"code":"import _slicedToArray from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/benner/AddBenner.js\";\nimport React, { useState } from \"react\";\nimport \"../assets/css/layout.css\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport DropZn from \"./DropZn\";\nimport Breadcrumb from \"../components/common/breadcrumb\";\nimport axios from \"axios\";\nimport CKEditors from \"react-ckeditor-component\";\nimport Cookie from \"js-cookie\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport { Editor } from \"@toast-ui/react-editor\";\n\nconst AddBenner = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        Zheditor = _useState2[0],\n        setZheditor = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Eneditor = _useState4[0],\n        setEeditor = _useState4[1];\n\n  const history = useHistory();\n\n  const onZhContentHandler = e => {\n    const content = e.editor.getData();\n    setZheditor(content);\n  };\n\n  const onEnContentHandler = e => {\n    const content = e.editor.getData();\n    setEeditor(content);\n  };\n\n  const ZhText = () => {\n    return React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\uC911\\uBB38\\uB0B4\\uC6A9\\uC785\\uB825\\uD558\\uAE30\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      initialValue: \"hello react editor world!\",\n      previewStyle: \"vertical\",\n      height: \"400px\",\n      initialEditType: \"wysiwyg\" // useCommandShortcut={true}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-square btn-warning btn-sm\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\"), \"\\xA0 \\xA0\", React.createElement(\"button\", {\n      className: \"btn btn-square btn-secondary active btn-sm\",\n      type: \"button\",\n      onClick: onSubmithandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\uC791\\uC131\")))));\n  };\n\n  const DropEn = () => {\n    // specify upload params and url for your files\n    const getUploadParams = ({\n      meta\n    }) => {\n      return {\n        url: \"https://httpbin.org/post\"\n      };\n    }; // called every time a file's `status` changes\n\n\n    const handleChangeStatus = ({\n      meta,\n      file\n    }, status) => {} // 파일정보\n    // receives array of files that are done uploading when submit button is clicked\n    ;\n\n    const handleSubmit = (files, allFiles) => {\n      console.log(allFiles);\n      allFiles.forEach(f => f.remove()); // toast.success(\"이미지를 업로드중입니다..!\")\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\uC601\\uBB38\\uBC30\\uB108\\uC774\\uBBF8\\uC9C0\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"dropzone dropzone-info\",\n      id: \"fileTypeValidation\",\n      action: \"/upload.php\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dz-message needsclick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      getUploadParams: getUploadParams,\n      onChangeStatus: handleChangeStatus,\n      maxFiles: 5 // onSubmit={handleSubmit}\n      ,\n      accept: \"image/*,audio/*,video/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))))));\n  };\n\n  const DropZh = () => {\n    // specify upload params and url for your files\n    const getUploadParams = ({\n      meta\n    }) => {\n      return {\n        url: \"https://httpbin.org/post\"\n      };\n    }; // called every time a file's `status` changes\n\n\n    const handleChangeStatus = ({\n      meta,\n      file\n    }, status) => {} // 파일정보\n    // receives array of files that are done uploading when submit button is clicked\n    ;\n\n    const handleSubmit = (files, allFiles) => {\n      console.log(allFiles);\n      allFiles.forEach(f => f.remove()); // toast.success(\"이미지를 업로드중입니다..!\")\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"\\uC911\\uBB38\\uBC30\\uB108\\uC774\\uBBF8\\uC9C0\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"dropzone dropzone-info\",\n      id: \"fileTypeValidation\",\n      action: \"/upload.php\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dz-message needsclick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      getUploadParams: getUploadParams,\n      onChangeStatus: handleChangeStatus,\n      maxFiles: 5 // onSubmit={handleSubmit}\n      ,\n      accept: \"image/*,audio/*,video/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })))))));\n  };\n\n  const onSubmithandler = async e => {\n    e.preventDefault();\n    let form = new FormData();\n    form.append(\"eh_editor\", Zheditor);\n    form.append(\"en_editor\", Eneditor);\n    const cookie = Cookie.get(\"token\");\n\n    try {\n      const _ref = await axios.post(\"/api/v1/banner/list\", form, {\n        headers: {\n          Authorization: cookie\n        }\n      }),\n            data = _ref.data;\n\n      if (data.status == \"success\") {\n        alert(\"성공적으로 작성되었습니다.\");\n        history.push(\"/bennerlist\");\n      }\n    } catch (error) {\n      alert(\"작성하는데 실패했습니다.\");\n    }\n  };\n\n  const EnText = () => {\n    // console.log(\"????\")\n    return React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"\\uC601\\uBB38\\uB0B4\\uC6A9\\uC785\\uB825\\uD558\\uAE30\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(CKEditors, {\n      editor: CKEditors,\n      content: Eneditor,\n      events: {\n        change: onEnContentHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Breadcrumb, {\n    title: \"\\uBC30\\uB108\\uAD00\\uB9AC\",\n    parent: \"\\uBC30\\uB108\\uCD94\\uAC00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-block row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12 col-lg-12 col-xl-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, DropEn()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, DropZh()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, EnText()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, ZhText())))))));\n};\n\nexport default AddBenner;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/benner/AddBenner.js"],"names":["React","useState","useHistory","useParams","DropZn","Breadcrumb","axios","CKEditors","Cookie","Dropzone","Editor","AddBenner","Zheditor","setZheditor","Eneditor","setEeditor","history","onZhContentHandler","e","content","editor","getData","onEnContentHandler","ZhText","onSubmithandler","DropEn","getUploadParams","meta","url","handleChangeStatus","file","status","handleSubmit","files","allFiles","console","log","forEach","f","remove","DropZh","preventDefault","form","FormData","append","cookie","get","post","headers","Authorization","data","alert","push","error","EnText","change"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport \"../assets/css/layout.css\"\nimport { useHistory, useParams } from \"react-router-dom\"\n\nimport DropZn from \"./DropZn\"\nimport Breadcrumb from \"../components/common/breadcrumb\"\nimport axios from \"axios\"\nimport CKEditors from \"react-ckeditor-component\"\nimport Cookie from \"js-cookie\"\nimport \"react-dropzone-uploader/dist/styles.css\"\nimport Dropzone from \"react-dropzone-uploader\"\nimport \"codemirror/lib/codemirror.css\"\nimport \"@toast-ui/editor/dist/toastui-editor.css\"\nimport { Editor } from \"@toast-ui/react-editor\"\n\nconst AddBenner = () => {\n  const [Zheditor, setZheditor] = useState(\"\")\n  const [Eneditor, setEeditor] = useState(\"\")\n  const history = useHistory()\n  const onZhContentHandler = (e) => {\n    const content = e.editor.getData()\n\n    setZheditor(content)\n  }\n  const onEnContentHandler = (e) => {\n    const content = e.editor.getData()\n\n    setEeditor(content)\n  }\n  const ZhText = () => {\n    return (\n      <div className=\"col-sm-12\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>중문내용입력하기</h5>\n          </div>\n          <div className=\"card-body\">\n            {/* <CKEditors\n              editor={CKEditors}\n              content={Zheditor}\n              events={{\n                change: onZhContentHandler,\n              }}\n            /> */}\n            <Editor\n              initialValue=\"hello react editor world!\"\n              previewStyle=\"vertical\"\n              height=\"400px\"\n              initialEditType=\"wysiwyg\"\n              // useCommandShortcut={true}\n            />\n            <div>\n              <button\n                className=\"btn btn-square btn-warning btn-sm\"\n                type=\"button\"\n              >\n                삭제\n              </button>\n              &nbsp; &nbsp;\n              {/* <button className=\"edit-button\">수정</button>{' '} */}\n              <button\n                className=\"btn btn-square btn-secondary active btn-sm\"\n                type=\"button\"\n                onClick={onSubmithandler}\n              >\n                작성\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const DropEn = () => {\n    // specify upload params and url for your files\n    const getUploadParams = ({ meta }) => {\n      return { url: \"https://httpbin.org/post\" }\n    }\n    // called every time a file's `status` changes\n\n    const handleChangeStatus = ({ meta, file }, status) => {\n      // 파일정보\n    }\n\n    // receives array of files that are done uploading when submit button is clicked\n    const handleSubmit = (files, allFiles) => {\n      console.log(allFiles)\n      allFiles.forEach((f) => f.remove())\n      // toast.success(\"이미지를 업로드중입니다..!\")\n    }\n\n    return (\n      <div>\n        <div className=\"col-sm-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5>영문배너이미지</h5>\n            </div>\n            <div className=\"card-body\">\n              <form\n                className=\"dropzone dropzone-info\"\n                id=\"fileTypeValidation\"\n                action=\"/upload.php\"\n              >\n                <div className=\"dz-message needsclick\">\n                  <Dropzone\n                    getUploadParams={getUploadParams}\n                    onChangeStatus={handleChangeStatus}\n                    maxFiles={5}\n                    // onSubmit={handleSubmit}\n                    accept=\"image/*,audio/*,video/*\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const DropZh = () => {\n    // specify upload params and url for your files\n    const getUploadParams = ({ meta }) => {\n      return { url: \"https://httpbin.org/post\" }\n    }\n    // called every time a file's `status` changes\n\n    const handleChangeStatus = ({ meta, file }, status) => {\n      // 파일정보\n    }\n\n    // receives array of files that are done uploading when submit button is clicked\n    const handleSubmit = (files, allFiles) => {\n      console.log(allFiles)\n      allFiles.forEach((f) => f.remove())\n      // toast.success(\"이미지를 업로드중입니다..!\")\n    }\n\n    return (\n      <div>\n        <div className=\"col-sm-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5>중문배너이미지</h5>\n            </div>\n            <div className=\"card-body\">\n              <form\n                className=\"dropzone dropzone-info\"\n                id=\"fileTypeValidation\"\n                action=\"/upload.php\"\n              >\n                <div className=\"dz-message needsclick\">\n                  <Dropzone\n                    getUploadParams={getUploadParams}\n                    onChangeStatus={handleChangeStatus}\n                    maxFiles={5}\n                    // onSubmit={handleSubmit}\n                    accept=\"image/*,audio/*,video/*\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const onSubmithandler = async (e) => {\n    e.preventDefault()\n    let form = new FormData()\n    form.append(\"eh_editor\", Zheditor)\n    form.append(\"en_editor\", Eneditor)\n\n    const cookie = Cookie.get(\"token\")\n\n    try {\n      const { data } = await axios.post(\"/api/v1/banner/list\", form, {\n        headers: {\n          Authorization: cookie,\n        },\n      })\n      if (data.status == \"success\") {\n        alert(\"성공적으로 작성되었습니다.\")\n        history.push(\"/bennerlist\")\n      }\n    } catch (error) {\n      alert(\"작성하는데 실패했습니다.\")\n    }\n  }\n  const EnText = () => {\n    // console.log(\"????\")\n    return (\n      <div className=\"col-sm-12\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>영문내용입력하기</h5>\n          </div>\n          <div className=\"card-body\">\n            <CKEditors\n              editor={CKEditors}\n              content={Eneditor}\n              events={{\n                change: onEnContentHandler,\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Breadcrumb title=\"배너관리\" parent=\"배너추가\" />\n      <div className=\"card\">\n        <div className=\"card-block row\">\n          <div className=\"col-sm-12 col-lg-12 col-xl-12\">\n            <div className=\"card-body\">\n              <form>\n                {/* <div> */}\n\n                <div>{DropEn()}</div>\n                <div>{DropZh()}</div>\n                <div>{EnText()}</div>\n                <div>{ZhText()}</div>\n\n                {/* </div> */}\n              </form>\n            </div>\n            {/* <div className=\"col-sm-12\">\n              <div> */}\n            {/* </div>\n            </div> */}\n            {/* <div className=\"col-sm-12\"> */}\n            {/* </div>\n            <div className=\"col-sm-12\">\n              <div> */}\n          </div>\n        </div>\n      </div>\n      {/* </div>\n      </div> */}\n    </>\n  )\n}\n\nexport default AddBenner\n"]},"metadata":{},"sourceType":"module"}