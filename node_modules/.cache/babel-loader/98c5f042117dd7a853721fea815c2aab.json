{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _constant = require('../../utils/constant.js');\n\nvar _PickerDragHandler = require('../Picker/PickerDragHandler');\n\nvar _PickerDragHandler2 = _interopRequireDefault(_PickerDragHandler);\n\nvar _PickerPointGenerator = require('../Picker/PickerPointGenerator');\n\nvar _PickerPointGenerator2 = _interopRequireDefault(_PickerPointGenerator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  step: _propTypes2.default.number,\n  hour: _propTypes2.default.string,\n  autoMode: _propTypes2.default.bool,\n  minute: _propTypes2.default.string,\n  handleHourChange: _propTypes2.default.func,\n  handleMinuteChange: _propTypes2.default.func,\n  clearFocus: _propTypes2.default.func\n};\nvar defaultProps = {\n  step: 0,\n  hour: '00',\n  minute: '00',\n  autoMode: true,\n  clearFocus: Function.prototype,\n  handleHourChange: Function.prototype,\n  handleMinuteChange: Function.prototype\n};\n\nvar TwentyFourHoursMode = function (_React$PureComponent) {\n  _inherits(TwentyFourHoursMode, _React$PureComponent);\n\n  function TwentyFourHoursMode(props) {\n    _classCallCheck(this, TwentyFourHoursMode);\n\n    var _this = _possibleConstructorReturn(this, (TwentyFourHoursMode.__proto__ || Object.getPrototypeOf(TwentyFourHoursMode)).call(this, props));\n\n    var pointerRotate = _this.resetHourDegree();\n\n    var step = props.step;\n    _this.state = {\n      step: step,\n      pointerRotate: pointerRotate\n    };\n    _this.handleStepChange = _this.handleStepChange.bind(_this);\n    _this.handleTimeChange = _this.handleTimeChange.bind(_this);\n    _this.handleTimePointerClick = _this.handleTimePointerClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(TwentyFourHoursMode, [{\n    key: 'handleStepChange',\n    value: function handleStepChange(step) {\n      var _this2 = this;\n\n      var stateStep = this.state.step;\n\n      if (stateStep !== step) {\n        this.pickerPointerContainer && this.pickerPointerContainer.addAnimation();\n        setTimeout(function () {\n          _this2.pickerPointerContainer && _this2.pickerPointerContainer.removeAnimation();\n\n          _this2.setStep(step);\n        }, 300);\n      }\n    }\n  }, {\n    key: 'setStep',\n    value: function setStep(step) {\n      var pointerRotate = step === 0 ? this.resetHourDegree() : this.resetMinuteDegree();\n      this.setState({\n        step: step,\n        pointerRotate: pointerRotate\n      });\n    }\n  }, {\n    key: 'clearFocus',\n    value: function clearFocus() {\n      var _props = this.props,\n          autoClose = _props.autoClose,\n          clearFocus = _props.clearFocus;\n      autoClose && clearFocus && clearFocus();\n    }\n  }, {\n    key: 'handleTimePointerClick',\n    value: function handleTimePointerClick(options) {\n      var time = options.time,\n          _options$autoMode = options.autoMode,\n          autoMode = _options$autoMode === undefined ? null : _options$autoMode,\n          _options$pointerRotat = options.pointerRotate,\n          pointerRotate = _options$pointerRotat === undefined ? null : _options$pointerRotat;\n\n      var isInteger = function isInteger(num) {\n        return (num ^ 0) === +num;\n      };\n\n      if (Number.isInteger) {\n        Number.isInteger(pointerRotate) && this.setState({\n          pointerRotate: pointerRotate\n        });\n      } else {\n        isInteger(pointerRotate) && this.setState({\n          pointerRotate: pointerRotate\n        });\n      }\n\n      this.handleTimeChange(time, autoMode);\n    }\n  }, {\n    key: 'handleTimeChange',\n    value: function handleTimeChange(time) {\n      var autoMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var validateTime = parseInt(time, 10);\n      var step = this.state.step;\n      var auto = autoMode === null ? this.props.autoMode : autoMode;\n      var _props2 = this.props,\n          handleHourChange = _props2.handleHourChange,\n          handleMinuteChange = _props2.handleMinuteChange;\n\n      if (step === 0) {\n        handleHourChange && handleHourChange(validateTime);\n      } else {\n        handleMinuteChange && handleMinuteChange(validateTime);\n      }\n\n      if (!auto) return;\n\n      if (step === 0) {\n        this.handleStepChange(1);\n      } else {\n        this.clearFocus();\n        this.setStep(0);\n      }\n    }\n  }, {\n    key: 'resetHourDegree',\n    value: function resetHourDegree() {\n      var hour = parseInt(this.props.hour, 10);\n      var pointerRotate = 0;\n\n      _constant.HOURS.forEach(function (h, index) {\n        if (hour === index + 1) {\n          pointerRotate = index < 12 ? 360 * (index + 1) / 12 : 360 * (index + 1 - 12) / 12;\n        }\n      });\n\n      return pointerRotate;\n    }\n  }, {\n    key: 'resetMinuteDegree',\n    value: function resetMinuteDegree() {\n      var minute = parseInt(this.props.minute, 10);\n      var pointerRotate = 0;\n\n      _constant.MINUTES.forEach(function (m, index) {\n        if (minute === index) {\n          pointerRotate = 360 * index / 60;\n        }\n      });\n\n      return pointerRotate;\n    }\n  }, {\n    key: 'getTopAndHeight',\n    value: function getTopAndHeight() {\n      var step = this.state.step;\n      var _props3 = this.props,\n          hour = _props3.hour,\n          minute = _props3.minute;\n      var time = step === 0 ? hour : minute;\n      var splitNum = step === 0 ? 12 : 60;\n      var minLength = step === 0 ? _constant.MIN_ABSOLUTE_POSITION : _constant.MAX_ABSOLUTE_POSITION;\n      var height = time < splitNum ? minLength - _constant.POINTER_RADIUS : _constant.MAX_ABSOLUTE_POSITION - _constant.POINTER_RADIUS;\n      var top = time < splitNum ? _constant.PICKER_RADIUS - minLength + _constant.POINTER_RADIUS : _constant.PICKER_RADIUS - _constant.MAX_ABSOLUTE_POSITION + _constant.POINTER_RADIUS;\n      return [top, height];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props4 = this.props,\n          hour = _props4.hour,\n          minute = _props4.minute,\n          timeMode = _props4.timeMode,\n          draggable = _props4.draggable,\n          limitDrag = _props4.limitDrag,\n          minuteStep = _props4.minuteStep;\n      var _state = this.state,\n          step = _state.step,\n          pointerRotate = _state.pointerRotate;\n      var activeHourClass = step === 0 ? 'time_picker_header active' : 'time_picker_header';\n      var activeMinuteClass = step === 1 ? 'time_picker_header active' : 'time_picker_header';\n\n      var _getTopAndHeight = this.getTopAndHeight(),\n          _getTopAndHeight2 = _slicedToArray(_getTopAndHeight, 2),\n          top = _getTopAndHeight2[0],\n          height = _getTopAndHeight2[1];\n\n      var rotateState = {\n        top: top,\n        height: height,\n        pointerRotate: pointerRotate\n      };\n      var type = step === 0 ? 'hour' : 'minute';\n      var PickerPointGenerator = (0, _PickerPointGenerator2.default)(type);\n      return _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement('div', {\n        className: 'time_picker_modal_header'\n      }, _react2.default.createElement('span', {\n        className: activeHourClass,\n        onClick: function onClick() {\n          return _this3.handleStepChange(0);\n        }\n      }, hour), _react2.default.createElement('span', {\n        className: 'time_picker_header_delivery'\n      }, ':'), _react2.default.createElement('span', {\n        className: activeMinuteClass,\n        onClick: function onClick() {\n          return _this3.handleStepChange(1);\n        }\n      }, minute)), _react2.default.createElement('div', {\n        className: 'picker_container'\n      }, _react2.default.createElement(PickerPointGenerator, {\n        ref: function ref(_ref) {\n          return _this3.pickerPointerContainer = _ref;\n        },\n        handleTimePointerClick: this.handleTimePointerClick,\n        pointerRotate: pointerRotate\n      }), _react2.default.createElement(_PickerDragHandler2.default, {\n        step: step,\n        timeMode: timeMode,\n        limitDrag: limitDrag,\n        minuteStep: minuteStep,\n        draggable: draggable,\n        rotateState: rotateState,\n        time: step === 0 ? parseInt(hour, 10) : parseInt(minute, 10),\n        minLength: step === 0 ? _constant.MIN_ABSOLUTE_POSITION : _constant.MAX_ABSOLUTE_POSITION,\n        handleTimePointerClick: this.handleTimePointerClick\n      })));\n    }\n  }]);\n\n  return TwentyFourHoursMode;\n}(_react2.default.PureComponent);\n\nTwentyFourHoursMode.propTypes = propTypes;\nTwentyFourHoursMode.defaultProps = defaultProps;\nexports.default = TwentyFourHoursMode;","map":null,"metadata":{},"sourceType":"script"}