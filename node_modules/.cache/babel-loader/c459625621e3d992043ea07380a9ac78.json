{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ClearButton = require('./ClearButton.react');\n\nvar _ClearButton2 = _interopRequireDefault(_ClearButton);\n\nvar _Loader = require('./Loader.react');\n\nvar _Loader2 = _interopRequireDefault(_Loader);\n\nvar _HintedInput = require('./HintedInput.react');\n\nvar _HintedInput2 = _interopRequireDefault(_HintedInput);\n\nvar _Token = require('./Token.react');\n\nvar _Token2 = _interopRequireDefault(_Token);\n\nvar _utils = require('./utils/');\n\nvar _typeaheadInputContainer = require('./containers/typeaheadInputContainer');\n\nvar _typeaheadInputContainer2 = _interopRequireDefault(_typeaheadInputContainer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TypeaheadInput = function (_React$Component) {\n  _inherits(TypeaheadInput, _React$Component);\n\n  function TypeaheadInput() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TypeaheadInput);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TypeaheadInput.__proto__ || Object.getPrototypeOf(TypeaheadInput)).call.apply(_ref, [this].concat(args))), _this), _this._renderToken = function (option, idx) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          inputProps = _this$props.inputProps,\n          labelKey = _this$props.labelKey,\n          onRemove = _this$props.onRemove,\n          renderToken = _this$props.renderToken;\n\n      var onRemoveWrapped = function onRemoveWrapped() {\n        return onRemove(option);\n      };\n\n      if (typeof renderToken === 'function') {\n        return renderToken(option, onRemoveWrapped, idx);\n      }\n\n      return _react2.default.createElement(_Token2.default, {\n        disabled: disabled,\n        key: idx,\n        onRemove: onRemoveWrapped,\n        tabIndex: inputProps.tabIndex\n      }, (0, _utils.getOptionLabel)(option, labelKey));\n    }, _this._renderAux = function () {\n      var _this$props2 = _this.props,\n          bsSize = _this$props2.bsSize,\n          clearButton = _this$props2.clearButton,\n          disabled = _this$props2.disabled,\n          isLoading = _this$props2.isLoading,\n          onClear = _this$props2.onClear,\n          selected = _this$props2.selected;\n\n      if (isLoading) {\n        return _react2.default.createElement('div', {\n          className: 'rbt-aux'\n        }, _react2.default.createElement(_Loader2.default, {\n          bsSize: bsSize\n        }));\n      }\n\n      if (clearButton && !disabled && selected.length) {\n        return _react2.default.createElement('div', {\n          className: 'rbt-aux'\n        }, _react2.default.createElement(_ClearButton2.default, {\n          bsSize: bsSize,\n          onClick: onClear,\n          onFocus: function onFocus(e) {\n            // Prevent the main input from auto-focusing again.\n            e.stopPropagation();\n          },\n          onMouseDown: _utils.preventInputBlur\n        }));\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TypeaheadInput, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          bsSize = _props.bsSize,\n          disabled = _props.disabled,\n          hintText = _props.hintText,\n          inputRef = _props.inputRef,\n          isFocused = _props.isFocused,\n          multiple = _props.multiple,\n          name = _props.name,\n          onBlur = _props.onBlur,\n          onChange = _props.onChange,\n          onContainerClickOrFocus = _props.onContainerClickOrFocus,\n          onFocus = _props.onFocus,\n          onKeyDown = _props.onKeyDown,\n          placeholder = _props.placeholder,\n          selected = _props.selected,\n          value = _props.value;\n\n      var inputProps = _extends({}, this.props.inputProps, {\n        disabled: disabled,\n        hintText: hintText,\n        inputRef: inputRef,\n        multiple: multiple,\n        name: name || this.props.inputProps.name,\n        onBlur: onBlur,\n        onChange: onChange,\n        onClick: onFocus,\n        onFocus: onFocus,\n        onKeyDown: onKeyDown,\n        placeholder: placeholder,\n        value: value\n      });\n\n      return (\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n\n        /* eslint-disable jsx-a11y/click-events-have-key-events */\n        _react2.default.createElement('div', {\n          className: (0, _classnames2.default)('rbt-input', 'form-control', {\n            'focus': isFocused,\n            'input-lg form-control-lg': bsSize === 'large' || bsSize === 'lg',\n            'input-sm form-control-sm': bsSize === 'small' || bsSize === 'sm',\n            'rbt-input-multi': multiple\n          }),\n          disabled: disabled,\n          onClick: onContainerClickOrFocus,\n          onFocus: onContainerClickOrFocus,\n          tabIndex: -1\n        }, _react2.default.createElement('div', {\n          className: 'rbt-input-wrapper'\n        }, multiple && selected.map(this._renderToken), _react2.default.createElement(_HintedInput2.default, inputProps)), this._renderAux())\n        /* eslint-enable jsx-a11y/no-static-element-interactions */\n\n        /* eslint-enable jsx-a11y/click-events-have-key-events */\n\n      );\n    }\n  }]);\n\n  return TypeaheadInput;\n}(_react2.default.Component);\n\nTypeaheadInput.propTypes = {\n  /**\n   * Provides a hook for customized rendering of tokens when multiple\n   * selections are enabled.\n   */\n  renderToken: _propTypes2.default.func\n};\nexports.default = (0, _typeaheadInputContainer2.default)(TypeaheadInput);","map":null,"metadata":{},"sourceType":"script"}