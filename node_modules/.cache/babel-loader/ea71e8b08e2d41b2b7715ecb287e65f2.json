{"ast":null,"code":"import _defineProperty from \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/src/util/Pagenation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { pathExists } from \"fs-extra\";\n\nconst Pagenation = ({\n  data,\n  fn\n}) => {\n  const _useState = useState(5),\n        _useState2 = _slicedToArray(_useState, 2),\n        per = _useState2[0],\n        setPer = _useState2[1]; // pagination initialState\n\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        arr = _useState4[0],\n        setArr = _useState4[1];\n\n  const _useState5 = useState({\n    start: 0,\n    end: 10,\n    current: 1\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        page = _useState6[0],\n        setPage = _useState6[1]; // pagination test 를 위한 + 50\n\n\n  const total = Math.ceil(data.count / per);\n  const array = [];\n\n  for (let i = 0; i < total; i++) {\n    array.push(i + 1);\n  }\n\n  useEffect(() => {\n    setArr(array.slice(page.start, page.end));\n  }, [per]); // pagination ++\n\n  const onPageUp = () => {\n    // if (page.current < arr[arr.length - 1]) {\n    //   fn(page.current)\n    //   setPage({ ...page, current: page.current + 1 })\n    // } else if (page.current % page.end === 0 && page.end < total) {\n    //   fn(page.current + 1)\n    //   setPage({\n    //     start: page.start + 1,\n    //     end: page.end + 1,\n    //     current: page.current + 1\n    //   })\n    //   setArr(array.slice(page.start + 1, page.end + 1))\n    // }\n    const lastIndex = array.length;\n\n    if (lastIndex <= 10 && page.current <= 10) {\n      if (page.current < lastIndex) {\n        setPage(_objectSpread({}, page, {\n          current: page.current + 1\n        }));\n        fn(page.current + 1);\n      }\n    } else {\n      const maxIndex = array[page.current];\n\n      if (maxIndex) {\n        setPage(_objectSpread({}, page, {\n          current: maxIndex\n        }));\n      } else {\n        setPage(_objectSpread({}, page, {\n          current: lastIndex - 1\n        }));\n      }\n    }\n  };\n\n  const tenPageUP = () => {\n    const lastIndex = array.length;\n\n    if (lastIndex <= 10 && page.current <= 10) {\n      setPage(_objectSpread({}, page, {\n        current: lastIndex\n      }));\n      fn(lastIndex);\n    } else {\n      const maxIndex = array[page.current + 9];\n\n      if (maxIndex) {\n        setPage(_objectSpread({}, page, {\n          current: maxIndex\n        }));\n        fn(maxIndex);\n      } else {\n        setPage(_objectSpread({}, page, {\n          current: lastIndex\n        }));\n        fn(lastIndex);\n      }\n    }\n  }; // 음수를 체크 하고  조건에 맞을때 무조건 1페이지로 보내는 변수\n  // 마이너스 체크에 클릭된페이지가 담겨있고 Math.sign으로 음수체크\n\n\n  const tenPageDown = () => {\n    const minusCheck = page.current - 10;\n\n    if (Math.sign(minusCheck) <= 0) {\n      setPage(_objectSpread({}, page, {\n        current: 1\n      }));\n      fn(1);\n    } else {\n      setPage(_objectSpread({}, page, {\n        current: minusCheck\n      }));\n      fn(minusCheck);\n    }\n  }; // pagination --\n\n\n  const onPageDown = () => {\n    // if (page.current > arr[0]) {\n    //   fn(page.current - 1)\n    //   setPage({ ...page, current: page.current - 1 })\n    // } else if (page.current % arr[0] === 0 && page.start >= 1) {\n    //   setPage({\n    //     start: page.start - 1,\n    //     end: page.end - 1,\n    //     current: page.current - 1\n    //   })\n    //   setArr(array.slice(page.start - 1, page.end - 1))\n    // }\n    // console.log(page.current)\n    const minusCheck = page.current - 1;\n\n    if (Math.sign(minusCheck) <= 0) {\n      setPage(_objectSpread({}, page, {\n        current: 1\n      }));\n    } else {\n      setPage(_objectSpread({}, page, {\n        current: minusCheck\n      }));\n    }\n\n    fn(page.current - 1);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"withing-pagenation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"withing-pagenation__cta btn-prev2\",\n    onClick: tenPageDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"blind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"10\\uD398\\uC774\\uC9C0 \\uC804\\uC73C\\uB85C \\uC774\\uB3D9\")), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"withing-pagenation__cta btn-prev\",\n    onClick: onPageDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"blind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"\\uC774\\uC804 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\")), React.createElement(\"div\", {\n    className: \"withing-pagenation__link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, array.map(a => React.createElement(\"a\", {\n    key: a // href=\"#\"\n    ,\n    className: \"page-link \".concat(page.current === a ? \"is-active\" : \"\"),\n    onClick: () => {\n      setPage(_objectSpread({}, page, {\n        current: a\n      }));\n      fn(a);\n      console.log(a);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"num\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, a)))), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"withing-pagenation__cta btn-next\",\n    onClick: onPageUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"blind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"\\uB2E4\\uC74C \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\")), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"withing-pagenation__cta btn-next2\",\n    onClick: tenPageUP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"blind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"10\\uD398\\uC774\\uC9C0 \\uB2E4\\uC74C\\uC73C\\uB85C \\uC774\\uB3D9\"))));\n};\n\nexport default Pagenation;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/util/Pagenation.js"],"names":["React","useState","useEffect","pathExists","Pagenation","data","fn","per","setPer","arr","setArr","start","end","current","page","setPage","total","Math","ceil","count","array","i","push","slice","onPageUp","lastIndex","length","maxIndex","tenPageUP","tenPageDown","minusCheck","sign","onPageDown","map","a","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { pathExists } from \"fs-extra\"\n\nconst Pagenation = ({ data, fn }) => {\n  const [per, setPer] = useState(5)\n  // pagination initialState\n  const [arr, setArr] = useState([])\n  const [page, setPage] = useState({\n    start: 0,\n    end: 10,\n    current: 1\n  })\n\n  // pagination test 를 위한 + 50\n  const total = Math.ceil(data.count / per)\n  const array = []\n  for (let i = 0; i < total; i++) {\n    array.push(i + 1)\n  }\n\n  useEffect(() => {\n    setArr(array.slice(page.start, page.end))\n  }, [per])\n\n  // pagination ++\n  const onPageUp = () => {\n    // if (page.current < arr[arr.length - 1]) {\n    //   fn(page.current)\n    //   setPage({ ...page, current: page.current + 1 })\n    // } else if (page.current % page.end === 0 && page.end < total) {\n    //   fn(page.current + 1)\n    //   setPage({\n    //     start: page.start + 1,\n    //     end: page.end + 1,\n    //     current: page.current + 1\n    //   })\n    //   setArr(array.slice(page.start + 1, page.end + 1))\n    // }\n    const lastIndex = array.length\n\n    if (lastIndex <= 10 && page.current <= 10) {\n      if (page.current < lastIndex) {\n        setPage({ ...page, current: page.current + 1 })\n        fn(page.current + 1)\n      }\n    } else {\n      const maxIndex = array[page.current]\n      if (maxIndex) {\n        setPage({ ...page, current: maxIndex })\n      } else {\n        setPage({ ...page, current: lastIndex - 1 })\n      }\n    }\n  }\n\n  const tenPageUP = () => {\n    const lastIndex = array.length\n    if (lastIndex <= 10 && page.current <= 10) {\n      setPage({ ...page, current: lastIndex })\n      fn(lastIndex)\n    } else {\n      const maxIndex = array[page.current + 9]\n      if (maxIndex) {\n        setPage({ ...page, current: maxIndex })\n        fn(maxIndex)\n      } else {\n        setPage({ ...page, current: lastIndex })\n        fn(lastIndex)\n      }\n    }\n  }\n\n  // 음수를 체크 하고  조건에 맞을때 무조건 1페이지로 보내는 변수\n  // 마이너스 체크에 클릭된페이지가 담겨있고 Math.sign으로 음수체크\n  const tenPageDown = () => {\n    const minusCheck = page.current - 10\n    if (Math.sign(minusCheck) <= 0) {\n      setPage({ ...page, current: 1 })\n      fn(1)\n    } else {\n      setPage({ ...page, current: minusCheck })\n      fn(minusCheck)\n    }\n  }\n  // pagination --\n  const onPageDown = () => {\n    // if (page.current > arr[0]) {\n    //   fn(page.current - 1)\n    //   setPage({ ...page, current: page.current - 1 })\n    // } else if (page.current % arr[0] === 0 && page.start >= 1) {\n    //   setPage({\n    //     start: page.start - 1,\n    //     end: page.end - 1,\n    //     current: page.current - 1\n    //   })\n    //   setArr(array.slice(page.start - 1, page.end - 1))\n    // }\n    // console.log(page.current)\n    const minusCheck = page.current - 1\n    if (Math.sign(minusCheck) <= 0) {\n      setPage({ ...page, current: 1 })\n    } else {\n      setPage({ ...page, current: minusCheck })\n    }\n    fn(page.current - 1)\n  }\n\n  return (\n    <>\n      {/* <!-- [D] 리스트 8개 이상 부터 페이지네이션 기능 추가 --> */}\n      <div className=\"withing-pagenation\">\n        {/* <!-- [D] only for pc : 10페이지 단위로 이동, 처음 페이지 일 경우 및 미노출시 is-disabled 클래스명 추가 및 disabled 추가 --> */}\n        <button\n          type=\"button\"\n          className=\"withing-pagenation__cta btn-prev2\"\n          onClick={tenPageDown}\n        >\n          <span className=\"blind\">10페이지 전으로 이동</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"withing-pagenation__cta btn-prev\"\n          onClick={onPageDown}\n        >\n          <span className=\"blind\">이전 페이지로 이동</span>\n        </button>\n        <div className=\"withing-pagenation__link\">\n          {/* <!-- [D] 선택된 경우 is-active 클래스명 추가 --> */}\n          {array.map(a => (\n            <a\n              key={a}\n              // href=\"#\"\n              className={`page-link ${page.current === a ? \"is-active\" : \"\"}`}\n              onClick={() => {\n                setPage({ ...page, current: a })\n                fn(a)\n                console.log(a)\n              }}\n            >\n              <span class=\"num\">{a}</span>\n            </a>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          className=\"withing-pagenation__cta btn-next\"\n          onClick={onPageUp}\n        >\n          <span className=\"blind\">다음 페이지로 이동</span>\n        </button>\n        {/* /* <!— [D] only for pc : 10페이지 단위로 이동, 마지막 페이지 일 경우 및 미노출시 is-disabled 클래스명 추가 —> */}\n        <button\n          type=\"button\"\n          className=\"withing-pagenation__cta btn-next2\"\n          onClick={tenPageUP}\n        >\n          <span className=\"blind\">10페이지 다음으로 이동</span>\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default Pagenation\n"]},"metadata":{},"sourceType":"module"}