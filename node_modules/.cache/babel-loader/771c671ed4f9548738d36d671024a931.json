{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _constant = require('./constant');\n\nvar getScrollPosition = function getScrollPosition() {\n  var position = {\n    x: document.documentElement.scrollLeft || document.body.scrollLeft || 0,\n    y: document.documentElement.scrollTop || document.body.scrollTop || 0\n  };\n  return position;\n};\n\nvar mousePosition = function mousePosition(e) {\n  var event = e || window.event;\n  var xPos = void 0;\n  var scrollPosition = getScrollPosition();\n\n  if (event.pageX) {\n    xPos = event.pageX;\n  } else if (event.clientX + scrollPosition.x - document.body.clientLeft) {\n    xPos = event.clientX + scrollPosition.x - document.body.clientLeft;\n  } else if (event.touches[0]) {\n    xPos = event.touches[0].clientX;\n  } else {\n    xPos = event.changedTouches[0].clientX;\n  }\n\n  var yPos = void 0;\n\n  if (event.pageY) {\n    yPos = event.pageY;\n  } else if (event.clientY + scrollPosition.y - document.body.clientTop) {\n    yPos = event.clientY + scrollPosition.y - document.body.clientTop;\n  } else if (event.touches[0]) {\n    yPos = event.touches[0].clientY;\n  } else {\n    yPos = event.changedTouches[0].clientY;\n  }\n\n  return {\n    x: xPos,\n    y: yPos\n  };\n};\n\nvar disableMouseDown = function disableMouseDown(e) {\n  var event = e || window.event;\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nvar browserStyles = function browserStyles(type, style) {\n  return _constant.BROWSER_COMPATIBLE.reduce(function (dict, browser) {\n    var key = browser ? '' + browser + type[0].toUpperCase() + type.slice(1) : type;\n    dict[key] = style;\n    return dict;\n  }, {});\n};\n\nvar getRotateStyle = function getRotateStyle(degree) {\n  return browserStyles('transform', 'rotate(' + degree + 'deg)');\n};\n\nvar getInlineRotateStyle = function getInlineRotateStyle(degree) {\n  return browserStyles('transform', 'translateX(-50%) rotate(' + degree + 'deg)');\n};\n\nvar getInitialPointerStyle = function getInitialPointerStyle(height, top, degree) {\n  return Object.assign({\n    height: height + 'px',\n    top: top + 'px'\n  }, browserStyles('transform', 'translateX(-50%) rotate(' + degree + 'deg)'));\n};\n\nvar getStandardAbsolutePosition = function getStandardAbsolutePosition(position, minPosition, maxPosition) {\n  var p = position;\n\n  if (p < minPosition) {\n    p = minPosition;\n  }\n\n  if (p > maxPosition) {\n    p = maxPosition;\n  }\n\n  return p;\n};\n\nvar degree2Radian = function degree2Radian(degree) {\n  return degree * (2 * Math.PI) / 360;\n};\n\nexports.default = {\n  degree2Radian: degree2Radian,\n  mousePosition: mousePosition,\n  disableMouseDown: disableMouseDown,\n  rotateStyle: getRotateStyle,\n  inlineRotateStyle: getInlineRotateStyle,\n  initialPointerStyle: getInitialPointerStyle,\n  validatePosition: getStandardAbsolutePosition\n};","map":null,"metadata":{},"sourceType":"script"}