{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/base/timepickerComponent/timepicker-three.js\";\nimport React from 'react';\nimport TimePicker from 'react-times'; // use material theme\n\nimport 'react-times/css/material/default.css'; // or you can use classic theme\n\nimport 'react-times/css/classic/default.css';\n\nclass TimePickerOne extends React.Component {\n  constructor(props) {\n    super(props);\n    const meridiem = props.meridiem,\n          focused = props.focused,\n          showTimezone = props.showTimezone,\n          timezone = props.timezone;\n    let hour = '';\n    let minute = '';\n    this.state = {\n      1: {\n        hour,\n        minute,\n        meridiem,\n        focused,\n        timezone,\n        showTimezone\n      },\n      2: {\n        hour,\n        minute,\n        meridiem,\n        focused,\n        timezone,\n        showTimezone\n      }\n    };\n    this.onFocusChange = this.onFocusChange.bind(this);\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.handleFocusedChange = this.handleFocusedChange.bind(this);\n  }\n\n  onTimeChange(section) {\n    return options => {\n      const hour = options.hour,\n            minute = options.minute,\n            meridiem = options.meridiem;\n      this.setState({\n        [section]: Object.assign({}, this.state[section], {\n          hour,\n          minute,\n          meridiem\n        })\n      });\n    };\n  }\n\n  onFocusChange(section) {\n    return focused => this.setState({\n      [section]: Object.assign({}, this.state[section], {\n        focused\n      })\n    });\n  }\n\n  handleFocusedChange(section) {\n    return () => this.setState({\n      [section]: Object.assign({}, this.state[section], {\n        focused: !this.state[section].focused\n      })\n    });\n  }\n\n  getBasicTrigger() {\n    const _this$state = this.state,\n          hour = _this$state.hour,\n          minute = _this$state.minute;\n    return React.createElement(\"div\", {\n      onClick: this.handleFocusedChange,\n      className: \"time_picker_trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Click to open panel\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), hour, \":\", minute));\n  }\n\n  getCustomTrigger() {\n    return React.createElement(\"div\", {\n      onClick: this.handleFocusedChange,\n      className: \"time_picker_trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    });\n  }\n\n  getTrigger(section) {\n    const customTriggerId = this.props.customTriggerId;\n    const triggers = {\n      0: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      1: this.getBasicTrigger(section),\n      2: this.getCustomTrigger()\n    };\n    return triggers[customTriggerId] || null;\n  }\n\n  renderTrigger(section) {\n    const _this$state$section = this.state[section],\n          hour = _this$state$section.hour,\n          minute = _this$state$section.minute,\n          focused = _this$state$section.focused,\n          meridiem = _this$state$section.meridiem,\n          timezone = _this$state$section.timezone,\n          showTimezone = _this$state$section.showTimezone;\n    return React.createElement(TimePicker, Object.assign({\n      id: section,\n      trigger: this.getTrigger(section)\n    }, this.props, {\n      focused: focused,\n      meridiem: meridiem,\n      timezone: timezone,\n      onFocusChange: this.onFocusChange(section),\n      onTimeChange: this.onTimeChange(section),\n      showTimezone: showTimezone,\n      time: hour && minute ? \"\".concat(hour, \":\").concat(minute) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"time_picker_wrapper2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.renderTrigger(1), React.createElement(\"div\", {\n      className: \"gap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.renderTrigger(2));\n  }\n\n}\n\nexport default TimePickerOne;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/base/timepickerComponent/timepicker-three.js"],"names":["React","TimePicker","TimePickerOne","Component","constructor","props","meridiem","focused","showTimezone","timezone","hour","minute","state","onFocusChange","bind","onTimeChange","handleFocusedChange","section","options","setState","Object","assign","getBasicTrigger","getCustomTrigger","getTrigger","customTriggerId","triggers","renderTrigger","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TimePicker from 'react-times';\n// use material theme\nimport 'react-times/css/material/default.css';\n// or you can use classic theme\nimport 'react-times/css/classic/default.css';\n\n\nclass TimePickerOne extends React.Component {\n  constructor(props) {\n    super(props);\n    const {  meridiem, focused, showTimezone, timezone } = props;\n    let hour = '';\n    let minute = '';\n\n    this.state = {\n      1: {\n        hour,\n        minute,\n        meridiem,\n        focused,\n        timezone,\n        showTimezone,\n      },\n      2: {\n        hour,\n        minute,\n        meridiem,\n        focused,\n        timezone,\n        showTimezone,\n      }\n    };\n\n    this.onFocusChange = this.onFocusChange.bind(this);\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.handleFocusedChange = this.handleFocusedChange.bind(this);\n  }\n\n  onTimeChange(section) {\n\n    return (options) => {\n      const {\n        hour,\n        minute,\n        meridiem\n      } = options;\n\n      this.setState({\n        [section]: Object.assign({}, this.state[section], {\n          hour, minute, meridiem\n        })\n      });\n    };\n  }\n\n  onFocusChange(section) {\n    return focused => this.setState({\n      [section]: Object.assign({}, this.state[section], {\n        focused\n      })\n    });\n  }\n\n  handleFocusedChange(section) {\n    return () => this.setState({\n      [section]: Object.assign({}, this.state[section], {\n        focused: !this.state[section].focused\n      })\n    });\n  }\n\n  getBasicTrigger() {\n    const { hour, minute } = this.state;\n    return (\n      <div\n        onClick={this.handleFocusedChange}\n        className=\"time_picker_trigger\"\n      >\n        <div>\n          Click to open panel<br />\n          {hour}:{minute}\n        </div>\n      </div>\n    );\n  }\n\n  getCustomTrigger() {\n    return (\n      <div\n        onClick={this.handleFocusedChange}\n        className=\"time_picker_trigger\"\n      >\n        {/* {ICONS.time} */}\n      </div>\n    );\n  }\n\n  getTrigger(section) {\n    const { customTriggerId } = this.props;\n    const triggers = {\n      0: (<div />),\n      1: this.getBasicTrigger(section),\n      2: this.getCustomTrigger()\n    };\n    return triggers[customTriggerId] || null;\n  }\n\n  renderTrigger(section) {\n    const {\n      hour,\n      minute,\n      focused,\n      meridiem,\n      timezone,\n      showTimezone,\n    } = this.state[section];\n\n    return (\n      <TimePicker\n        id={section}\n        trigger={this.getTrigger(section)}\n        {...this.props}\n        focused={focused}\n        meridiem={meridiem}\n        timezone={timezone}\n        onFocusChange={this.onFocusChange(section)}\n        onTimeChange={this.onTimeChange(section)}\n        showTimezone={showTimezone}\n        time={hour && minute ? `${hour}:${minute}` : null}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"time_picker_wrapper2\">\n        {this.renderTrigger(1)}\n        <div className=\"gap\" />\n        {this.renderTrigger(2)}\n      </div>\n    );\n  }\n}\n\nexport default TimePickerOne;"]},"metadata":{},"sourceType":"module"}