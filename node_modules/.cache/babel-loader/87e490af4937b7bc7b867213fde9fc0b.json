{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/base/popover/popoverDirection.js\";\nimport React, { useState } from \"react\";\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\n\nconst PopoverItem = props => {\n  const {\n    id,\n    item\n  } = props;\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-4\",\n    color: \"primary\",\n    id: \"Popover-\" + id,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, item.text), /*#__PURE__*/React.createElement(Popover, {\n    placement: item.placement,\n    isOpen: popoverOpen,\n    target: \"Popover-\" + id,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\")));\n};\n\nconst PopoverExampleMulti = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, [{\n    placement: \"top\",\n    text: \"Popover on top\"\n  }, {\n    placement: \"bottom\",\n    text: \"Popover on bottom\"\n  }, {\n    placement: \"left\",\n    text: \"Popover on left\"\n  }, {\n    placement: \"right\",\n    text: \"Popover on right\"\n  }].map((popover, i) => {\n    return /*#__PURE__*/React.createElement(PopoverItem, {\n      key: i,\n      item: popover,\n      id: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default PopoverExampleMulti;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/base/popover/popoverDirection.js"],"names":["React","useState","Button","Popover","PopoverBody","PopoverItem","props","id","item","popoverOpen","setPopoverOpen","toggle","text","placement","PopoverExampleMulti","map","popover","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,WAA1B,QAA6C,YAA7C;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAeF,KAArB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMU,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,EAAE,EAAE,aAAaF,EAHnB;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,IAAI,CAACI,IANR,CADF,eASE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEJ,IAAI,CAACK,SADlB;AAEE,IAAA,MAAM,EAAEJ,WAFV;AAGE,IAAA,MAAM,EAAE,aAAaF,EAHvB;AAIE,IAAA,MAAM,EAAEI,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEANF,CATF,CADF;AAsBD,CA5BD;;AA8BA,MAAMG,mBAAmB,GAAGR,KAAK,IAAI;AACnC,sBACE,0CACG,CACC;AACEO,IAAAA,SAAS,EAAE,KADb;AAEED,IAAAA,IAAI,EAAE;AAFR,GADD,EAKC;AACEC,IAAAA,SAAS,EAAE,QADb;AAEED,IAAAA,IAAI,EAAE;AAFR,GALD,EASC;AACEC,IAAAA,SAAS,EAAE,MADb;AAEED,IAAAA,IAAI,EAAE;AAFR,GATD,EAaC;AACEC,IAAAA,SAAS,EAAE,OADb;AAEED,IAAAA,IAAI,EAAE;AAFR,GAbD,EAiBCG,GAjBD,CAiBK,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACpB,wBAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,CAAlB;AAAqB,MAAA,IAAI,EAAED,OAA3B;AAAoC,MAAA,EAAE,EAAEC,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAnBA,CADH,CADF;AAwBD,CAzBD;;AA2BA,eAAeH,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\n\nconst PopoverItem = props => {\n  const { id, item } = props;\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  return (\n    <span>\n      <Button\n        className=\"mr-4\"\n        color=\"primary\"\n        id={\"Popover-\" + id}\n        type=\"button\"\n      >\n        {item.text}\n      </Button>\n      <Popover\n        placement={item.placement}\n        isOpen={popoverOpen}\n        target={\"Popover-\" + id}\n        toggle={toggle}\n      >\n        <PopoverBody>\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\n        </PopoverBody>\n      </Popover>\n    </span>\n  );\n};\n\nconst PopoverExampleMulti = props => {\n  return (\n    <>\n      {[\n        {\n          placement: \"top\",\n          text: \"Popover on top\"\n        },\n        {\n          placement: \"bottom\",\n          text: \"Popover on bottom\"\n        },\n        {\n          placement: \"left\",\n          text: \"Popover on left\"\n        },\n        {\n          placement: \"right\",\n          text: \"Popover on right\"\n        }\n      ].map((popover, i) => {\n        return <PopoverItem key={i} item={popover} id={i} />;\n      })}\n    </>\n  );\n};\n\nexport default PopoverExampleMulti;"]},"metadata":{},"sourceType":"module"}