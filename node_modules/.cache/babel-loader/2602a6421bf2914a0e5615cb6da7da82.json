{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/src/Notice/NotGuideUpDate .js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../assets/css/layout.css\";\nimport Breadcrumb from \"../components/common/breadcrumb\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { Editor } from \"@toast-ui/react-editor\";\nimport { message } from \"antd\";\n\nconst NotiGuideUpDate = ({\n  history,\n  match\n}) => {\n  const [KoTitle, setKoTitle] = useState(\"\");\n  const [editorState, setEditorState] = useState();\n  const enEditorRef = useRef();\n  useEffect(() => {\n    let form = new FormData();\n    form.append(\"notice_no\", match.params.id); // 데이터 가져오기\n\n    axios.post(\"/api/v1/notice/editpageG\", form, {\n      headers: {\n        Authorization: Cookie.get(\"token\")\n      }\n    }).then(function (response) {\n      // 데이터불러오는데 성공했는지 확인 if\n      setKoTitle(response.data.data.title);\n      enEditorRef.current.getInstance().setHtml(response.data.data.editor);\n    }); // 데이터 가져온후에 state 바인딩\n  }, []);\n\n  const onEnEditorChangeHandler = () => {\n    const content = enEditorRef.current.getInstance().getHtml();\n    setEditorState(content);\n  };\n\n  const onSubmithandler = async e => {\n    e.preventDefault();\n    let form = new FormData();\n    form.append(\"title\", KoTitle);\n    form.append(\"editor\", editorState);\n    form.append(\"notice_no\", match.params.id);\n    if (!KoTitle) message.warning(\"제목을 입력해 주세요\");\n    if (!editorState) message.warning(\"내용을 입력해 주세요\");\n    const cookie = Cookie.get(\"token\");\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/v1/notice/editG\", form, {\n        headers: {\n          Authorization: cookie\n        }\n      });\n\n      if (data.status == \"success\") {\n        alert(\"성공적으로 수정되었습니다.\");\n        history.push(\"/notice/guide\"); // history.push(\"/notice/guide\")\n      }\n    } catch (error) {\n      alert(\"수정하는데 실패했습니다.\");\n    }\n  };\n\n  const imageHandler = async (file, callback) => {\n    // 파일 업로드\n    const form = new FormData();\n    form.append(\"type\", \"A\");\n    form.append(\"file\", file);\n    const {\n      data\n    } = await axios.post(\"/api/v1/File/uploadFile\", form, {\n      headers: {\n        Authorization: Cookie.get(\"token\")\n      }\n    });\n    callback(data.data);\n  };\n\n  const onEditorStateChange = data => {\n    setEditorState(data);\n  };\n\n  const backBtn = () => history.goBack();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    title: \"\\uAC00\\uC774\\uB4DC\\uC6A9 \\uACF5\\uC9C0\\uC0AC\\uD56D \\uC218\\uC815\\uD398\\uC774\\uC9C0\",\n    parent: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uAD00\\uB9AC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-block row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 col-lg-12 col-xl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noti-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"\\uC81C\\uBAA9\\uC785\\uB825\"), \"\\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setKoTitle(e.target.value),\n    value: KoTitle,\n    class: \"form-control\",\n    id: \"exampleFormControlInput1\",\n    type: \"input\",\n    placeholder: \"\\uD55C\\uAE00\\uB85C\\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"\\uB0B4\\uC6A9\\uC785\\uB825\\uD558\\uAE30\"), \"\\xA0\"), /*#__PURE__*/React.createElement(Editor, {\n    data: editorState,\n    initialValue: editorState,\n    previewStyle: \"vertical\",\n    height: \"400px\",\n    initialEditType: \"wysiwyg\",\n    useCommandShortcut: true,\n    exts: [{\n      name: \"chart\",\n      minWidth: 100,\n      maxWidth: 600,\n      minHeight: 100,\n      maxHeight: 300\n    }, \"scrollSync\", \"colorSyntax\", \"uml\", \"mark\", \"table\"],\n    onChange: onEnEditorChangeHandler,\n    ref: enEditorRef,\n    hooks: {\n      addImageBlobHook: imageHandler\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noti-btn-grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning active  btn -xs btn-sm\",\n    type: \"button\",\n    onClick: backBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, \"\\uC791\\uC131 \\uCDE8\\uC18C\"), \"\\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn  btn-secondary active btn-sm\",\n    type: \"button\",\n    onClick: onSubmithandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"\\uC791\\uC131\"))))))));\n};\n\nexport default NotiGuideUpDate;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/Notice/NotGuideUpDate .js"],"names":["React","useState","useEffect","useRef","Breadcrumb","axios","Cookie","Editor","message","NotiGuideUpDate","history","match","KoTitle","setKoTitle","editorState","setEditorState","enEditorRef","form","FormData","append","params","id","post","headers","Authorization","get","then","response","data","title","current","getInstance","setHtml","editor","onEnEditorChangeHandler","content","getHtml","onSubmithandler","e","preventDefault","warning","cookie","status","alert","push","error","imageHandler","file","callback","onEditorStateChange","backBtn","goBack","target","value","name","minWidth","maxWidth","minHeight","maxHeight","addImageBlobHook"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\nimport \"../assets/css/layout.css\"\nimport Breadcrumb from \"../components/common/breadcrumb\"\nimport axios from \"axios\"\nimport Cookie from \"js-cookie\"\nimport { Editor } from \"@toast-ui/react-editor\"\nimport { message } from \"antd\"\n\nconst NotiGuideUpDate = ({ history, match }) => {\n  const [KoTitle, setKoTitle] = useState(\"\")\n  const [editorState, setEditorState] = useState()\n  const enEditorRef = useRef()\n  useEffect(() => {\n    let form = new FormData()\n\n    form.append(\"notice_no\", match.params.id)\n\n    // 데이터 가져오기\n    axios\n      .post(\"/api/v1/notice/editpageG\", form, {\n        headers: { Authorization: Cookie.get(\"token\") }\n      })\n      .then(function(response) {\n        // 데이터불러오는데 성공했는지 확인 if\n        setKoTitle(response.data.data.title)\n\n        enEditorRef.current.getInstance().setHtml(response.data.data.editor)\n      })\n    // 데이터 가져온후에 state 바인딩\n  }, [])\n\n  const onEnEditorChangeHandler = () => {\n    const content = enEditorRef.current.getInstance().getHtml()\n    setEditorState(content)\n  }\n\n  const onSubmithandler = async e => {\n    e.preventDefault()\n\n    let form = new FormData()\n    form.append(\"title\", KoTitle)\n    form.append(\"editor\", editorState)\n    form.append(\"notice_no\", match.params.id)\n    if (!KoTitle) message.warning(\"제목을 입력해 주세요\")\n    if (!editorState) message.warning(\"내용을 입력해 주세요\")\n\n    const cookie = Cookie.get(\"token\")\n\n    try {\n      const { data } = await axios.post(\"/api/v1/notice/editG\", form, {\n        headers: {\n          Authorization: cookie\n        }\n      })\n      if (data.status == \"success\") {\n        alert(\"성공적으로 수정되었습니다.\")\n        history.push(\"/notice/guide\")\n        // history.push(\"/notice/guide\")\n      }\n    } catch (error) {\n      alert(\"수정하는데 실패했습니다.\")\n    }\n  }\n\n  const imageHandler = async (file, callback) => {\n    // 파일 업로드\n    const form = new FormData()\n    form.append(\"type\", \"A\")\n    form.append(\"file\", file)\n\n    const { data } = await axios.post(\"/api/v1/File/uploadFile\", form, {\n      headers: {\n        Authorization: Cookie.get(\"token\")\n      }\n    })\n\n    callback(data.data)\n  }\n\n  const onEditorStateChange = data => {\n    setEditorState(data)\n  }\n  const backBtn = () => history.goBack()\n  return (\n    <>\n      <Breadcrumb title=\"가이드용 공지사항 수정페이지\" parent=\"공지사항관리\" />\n      <div className=\"card\">\n        <div className=\"card-block row\">\n          <div className=\"col-sm-12 col-lg-12 col-xl-12\">\n            <div className=\"card-body\">\n              <div className=\"noti-title\">\n                <form>\n                  <div className=\"card-header\">\n                    <h5>제목입력</h5> \n                  </div>\n                  <input\n                    onChange={e => setKoTitle(e.target.value)}\n                    value={KoTitle}\n                    class=\"form-control\"\n                    id=\"exampleFormControlInput1\"\n                    type=\"input\"\n                    placeholder=\"한글로입력해주세요\"\n                  />\n                </form>\n              </div>\n            </div>\n            <div className=\"col-sm-12\">\n              <div />\n            </div>\n            <div className=\"col-sm-12\">\n              <div className=\"card-header\">\n                <h5>내용입력하기</h5> \n              </div>\n              <Editor\n                data={editorState}\n                initialValue={editorState}\n                previewStyle=\"vertical\"\n                height=\"400px\"\n                initialEditType=\"wysiwyg\"\n                useCommandShortcut={true}\n                exts={[\n                  {\n                    name: \"chart\",\n                    minWidth: 100,\n                    maxWidth: 600,\n                    minHeight: 100,\n                    maxHeight: 300\n                  },\n                  \"scrollSync\",\n                  \"colorSyntax\",\n                  \"uml\",\n                  \"mark\",\n                  \"table\"\n                ]}\n                onChange={onEnEditorChangeHandler}\n                ref={enEditorRef}\n                hooks={{\n                  addImageBlobHook: imageHandler\n                }}\n              />\n            </div>\n            <div className=\"col-sm-12\">\n              <div>\n                <div className=\"noti-btn-grp\">\n                  <button\n                    className=\"btn btn-warning active  btn -xs btn-sm\"\n                    type=\"button\"\n                    onClick={backBtn}\n                  >\n                    작성 취소\n                  </button>\n                  &nbsp; &nbsp;\n                  <button\n                    className=\"btn  btn-secondary active btn-sm\"\n                    type=\"button\"\n                    onClick={onSubmithandler}\n                  >\n                    작성\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default NotiGuideUpDate\n"]},"metadata":{},"sourceType":"module"}