{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _AutosizeInput = require('./AutosizeInput.react');\n\nvar _AutosizeInput2 = _interopRequireDefault(_AutosizeInput);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar STYLES = {\n  backgroundColor: 'transparent',\n  border: 0,\n  boxShadow: 'none',\n  cursor: 'inherit',\n  outline: 'none',\n  padding: 0\n}; // Shim around a standard input to normalize how props are applied.\n\nvar StandardInput = function (_React$Component) {\n  _inherits(StandardInput, _React$Component);\n\n  function StandardInput() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, StandardInput);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StandardInput.__proto__ || Object.getPrototypeOf(StandardInput)).call.apply(_ref, [this].concat(args))), _this), _this.getInput = function () {\n      return _this._input;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(StandardInput, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          inputClassName = _props.inputClassName,\n          inputStyle = _props.inputStyle,\n          otherProps = _objectWithoutProperties(_props, ['inputClassName', 'inputStyle']);\n\n      return _react2.default.createElement('input', _extends({}, otherProps, {\n        className: inputClassName,\n        ref: function ref(input) {\n          return _this2._input = input;\n        },\n        style: _extends({}, STYLES, inputStyle, {\n          width: '100%'\n        })\n      }));\n    } // Mirror the AutosizeInput API for consistency.\n\n  }]);\n\n  return StandardInput;\n}(_react2.default.Component);\n\nvar HintedInput = function (_React$Component2) {\n  _inherits(HintedInput, _React$Component2);\n\n  function HintedInput() {\n    var _ref2;\n\n    var _temp2, _this3, _ret2;\n\n    _classCallCheck(this, HintedInput);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _ret2 = (_temp2 = (_this3 = _possibleConstructorReturn(this, (_ref2 = HintedInput.__proto__ || Object.getPrototypeOf(HintedInput)).call.apply(_ref2, [this].concat(args))), _this3), _this3._renderInput = function () {\n      var _this3$props = _this3.props,\n          className = _this3$props.className,\n          hintText = _this3$props.hintText,\n          inputRef = _this3$props.inputRef,\n          multiple = _this3$props.multiple,\n          props = _objectWithoutProperties(_this3$props, ['className', 'hintText', 'inputRef', 'multiple']); // Render a standard input in the single-select case to address #278.\n\n\n      var InputComponent = multiple ? _AutosizeInput2.default : StandardInput;\n      return _react2.default.createElement(InputComponent, _extends({}, props, {\n        inputClassName: (0, _classnames2.default)('rbt-input-main', className),\n        inputStyle: STYLES,\n        ref: inputRef,\n        style: {\n          position: 'relative',\n          zIndex: 1\n        }\n      }));\n    }, _this3._renderHint = function () {\n      var _this3$props2 = _this3.props,\n          hintText = _this3$props2.hintText,\n          multiple = _this3$props2.multiple; // TODO: Support hinting for multi-selection.\n\n      return multiple ? null : _react2.default.createElement(_AutosizeInput2.default, {\n        'aria-hidden': true,\n        inputClassName: 'rbt-input-hint',\n        inputStyle: _extends({}, STYLES, {\n          color: 'rgba(0, 0, 0, 0.35)'\n        }),\n        style: {\n          bottom: 0,\n          display: 'block',\n          pointerEvents: 'none',\n          position: 'absolute',\n          top: 0,\n          zIndex: 0\n        },\n        tabIndex: -1,\n        value: hintText\n      });\n    }, _temp2), _possibleConstructorReturn(_this3, _ret2);\n  }\n\n  _createClass(HintedInput, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', {\n        style: {\n          display: this.props.multiple ? 'inline-block' : 'block',\n          position: 'relative'\n        }\n      }, this._renderInput(), this._renderHint());\n    }\n  }]);\n\n  return HintedInput;\n}(_react2.default.Component);\n\nHintedInput.propTypes = {\n  type: _propTypes2.default.string\n};\nHintedInput.defaultProps = {\n  type: 'text'\n};\nexports.default = HintedInput;","map":null,"metadata":{},"sourceType":"script"}