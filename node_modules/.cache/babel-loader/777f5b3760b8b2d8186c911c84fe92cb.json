{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  children: _propTypes2.default.node,\n  onOutsideClick: _propTypes2.default.func\n};\nvar defaultProps = {\n  children: _react2.default.createElement('span', null),\n  onOutsideClick: Function.prototype\n};\n\nvar OutsideClickHandler = function (_React$PureComponent) {\n  _inherits(OutsideClickHandler, _React$PureComponent);\n\n  function OutsideClickHandler(props) {\n    _classCallCheck(this, OutsideClickHandler);\n\n    var _this = _possibleConstructorReturn(this, (OutsideClickHandler.__proto__ || Object.getPrototypeOf(OutsideClickHandler)).call(this, props));\n\n    _this.hasAction = false;\n    _this.onOutsideClick = _this.onOutsideClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(OutsideClickHandler, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.bindActions();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.bindActions();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unbindActions();\n    }\n  }, {\n    key: 'bindActions',\n    value: function bindActions() {\n      var closeOnOutsideClick = this.props.closeOnOutsideClick;\n\n      if (closeOnOutsideClick) {\n        if (this.hasAction) return;\n\n        if (document.addEventListener) {\n          document.addEventListener('mousedown', this.onOutsideClick, true);\n        } else {\n          document.attachEvent('onmousedown', this.onOutsideClick);\n        }\n\n        this.hasAction = true;\n      }\n    }\n  }, {\n    key: 'unbindActions',\n    value: function unbindActions() {\n      if (!this.hasAction) return;\n      var closeOnOutsideClick = this.props.closeOnOutsideClick;\n\n      if (closeOnOutsideClick) {\n        if (document.removeEventListener) {\n          document.removeEventListener('mousedown', this.onOutsideClick, true);\n        } else {\n          document.detachEvent('onmousedown', this.onOutsideClick);\n        }\n\n        this.hasAction = false;\n      }\n    }\n  }, {\n    key: 'onOutsideClick',\n    value: function onOutsideClick(e) {\n      var event = e || window.event;\n      var mouseTarget = typeof event.which !== 'undefined' ? event.which : event.button;\n\n      var isDescendantOfRoot = _reactDom2.default.findDOMNode(this.childNode).contains(event.target);\n\n      if (!isDescendantOfRoot && mouseTarget === 1) {\n        var onOutsideClick = this.props.onOutsideClick;\n        onOutsideClick && onOutsideClick(event);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var focused = this.props.focused;\n      var outsideClass = focused ? 'outside_container active' : 'outside_container';\n      return _react2.default.createElement('div', {\n        ref: function ref(c) {\n          return _this2.childNode = c;\n        },\n        className: outsideClass\n      }, this.props.children);\n    }\n  }]);\n\n  return OutsideClickHandler;\n}(_react2.default.PureComponent);\n\nOutsideClickHandler.propTypes = propTypes;\nOutsideClickHandler.defaultProps = defaultProps;\nexports.default = OutsideClickHandler;","map":null,"metadata":{},"sourceType":"script"}