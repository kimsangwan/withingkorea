{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/auth/signin.js\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"../assets/images/endless-logo.png\";\nimport man from \"../assets/images/dashboard/user.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport { withRouter } from \"react-router\";\nimport app, { googleProvider, facebookProvider, twitterProvider, githubProvider } from \"../data/base\";\nimport Axios from \"axios\";\n\nconst Signin = (props, {\n  history\n}) => {\n  const [email, setEmail] = useState(\"admin@withing.co.kr\");\n  const [password, setPassword] = useState(\"Rhksflwk1!\");\n  const [value, setValue] = useState(localStorage.getItem(\"profileURL\" || man));\n  useEffect(() => {\n    if (value !== null) localStorage.setItem(\"profileURL\", value);else localStorage.setItem(\"profileURL\", man);\n  }, [value]);\n\n  const loginAuth = async () => {\n    try {\n      const form = new FormData();\n      form.append(\"id\", email);\n      form.append(\"password\", password);\n      const {\n        data\n      } = await axios.post(\"/api/v1/gateway/login\", form);\n\n      if (data.status === \"success\") {\n        console.log(props);\n        history.push(\"/userlist\");\n      }\n    } catch (error) {}\n  }; //un-comment this loginAuth Function when u want use login with firebase only\n  // const loginAuth = async () => {\n  //     try {\n  //         await app\n  //             .auth()\n  //             .signInWithEmailAndPassword(email, password);\n  //         setValue(man);\n  //         history.push(`${process.env.PUBLIC_URL}/dashboard/default`);\n  //     } catch (error) {\n  //         setTimeout(() => {\n  //             toast.error(\"Oppss.. The password is invalid or the user does not have a password.\");\n  //         }, 200);\n  //     }\n  // }\n\n\n  const googleAuth = async () => {\n    try {\n      app.auth().signInWithPopup(googleProvider).then(function (result) {\n        setValue(result.user.photoURL);\n        setTimeout(() => {\n          history.push(`${process.env.PUBLIC_URL}/dashboard/default`);\n        }, 200);\n      });\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\"Oppss.. The password is invalid or the user does not have a password.\");\n      }, 200);\n    }\n  };\n\n  const facebookAuth = async () => {\n    try {\n      app.auth().signInWithPopup(facebookProvider).then(function (result) {\n        setValue(result.user.photoURL);\n        setTimeout(() => {\n          history.push(`${process.env.PUBLIC_URL}/dashboard/default`);\n        }, 200);\n      });\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\"Oppss.. The password is invalid or the user does not have a password.\");\n      }, 200);\n    }\n  };\n\n  const twitterAuth = async () => {\n    try {\n      app.auth().signInWithPopup(twitterProvider).then(function (result) {\n        setValue(result.user.photoURL);\n        setTimeout(() => {\n          history.push(`${process.env.PUBLIC_URL}/dashboard/default`);\n        }, 200);\n      });\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\"Oppss.. The password is invalid or the user does not have a password.\");\n      }, 200);\n    }\n  };\n\n  const githubAuth = async () => {\n    try {\n      app.auth().signInWithPopup(githubProvider).then(function (result) {\n        setValue(result.user.photoURL);\n        setTimeout(() => {\n          history.push(`${process.env.PUBLIC_URL}/dashboard/default`);\n        }, 200);\n      });\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\"Oppss.. The password is invalid or the user does not have a password.\");\n      }, 200);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authentication-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-innerright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authentication-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 27\n    }\n  }, \"\\uAD00\\uB9AC\\uC790 \\uB85C\\uADF8\\uC778\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 27\n    }\n  }, \"\\uC544\\uC774\\uB514\\uC640 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-form-label pt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"\\uC544\\uC774\\uB514\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"checkbox1\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"checkbox1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, \"\\uC544\\uC774\\uB514 \\uAE30\\uC5B5\\uD558\\uAE30\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-row mt-3 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    type: \"button\",\n    onClick: () => loginAuth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Login\")))))))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default withRouter(Signin);","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/auth/signin.js"],"names":["React","useState","useEffect","logo","man","ToastContainer","toast","axios","withCookies","Cookies","withRouter","app","googleProvider","facebookProvider","twitterProvider","githubProvider","Axios","Signin","props","history","email","setEmail","password","setPassword","value","setValue","localStorage","getItem","setItem","loginAuth","form","FormData","append","data","post","status","console","log","push","error","googleAuth","auth","signInWithPopup","then","result","user","photoURL","setTimeout","process","env","PUBLIC_URL","facebookAuth","twitterAuth","githubAuth","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport logo from \"../assets/images/endless-logo.png\"\nimport man from \"../assets/images/dashboard/user.png\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport axios from \"axios\"\nimport { withCookies, Cookies } from \"react-cookie\"\n\nimport { withRouter } from \"react-router\"\nimport app, {\n  googleProvider,\n  facebookProvider,\n  twitterProvider,\n  githubProvider,\n} from \"../data/base\"\nimport Axios from \"axios\"\n\nconst Signin = (props, { history }) => {\n  const [email, setEmail] = useState(\"admin@withing.co.kr\")\n  const [password, setPassword] = useState(\"Rhksflwk1!\")\n\n  const [value, setValue] = useState(localStorage.getItem(\"profileURL\" || man))\n\n  useEffect(() => {\n    if (value !== null) localStorage.setItem(\"profileURL\", value)\n    else localStorage.setItem(\"profileURL\", man)\n  }, [value])\n\n  const loginAuth = async () => {\n    try {\n      const form = new FormData()\n\n      form.append(\"id\", email)\n      form.append(\"password\", password)\n\n      const { data } = await axios.post(\"/api/v1/gateway/login\", form)\n      if (data.status === \"success\") {\n        console.log(props)\n        history.push(\"/userlist\")\n      }\n    } catch (error) {}\n  }\n\n  //un-comment this loginAuth Function when u want use login with firebase only\n  // const loginAuth = async () => {\n  //     try {\n  //         await app\n  //             .auth()\n  //             .signInWithEmailAndPassword(email, password);\n  //         setValue(man);\n  //         history.push(`${process.env.PUBLIC_URL}/dashboard/default`);\n\n  //     } catch (error) {\n  //         setTimeout(() => {\n  //             toast.error(\"Oppss.. The password is invalid or the user does not have a password.\");\n  //         }, 200);\n  //     }\n  // }\n\n  const googleAuth = async () => {\n    try {\n      app\n        .auth()\n        .signInWithPopup(googleProvider)\n        .then(function (result) {\n          setValue(result.user.photoURL)\n          setTimeout(() => {\n            history.push(`${process.env.PUBLIC_URL}/dashboard/default`)\n          }, 200)\n        })\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\n          \"Oppss.. The password is invalid or the user does not have a password.\"\n        )\n      }, 200)\n    }\n  }\n\n  const facebookAuth = async () => {\n    try {\n      app\n        .auth()\n        .signInWithPopup(facebookProvider)\n        .then(function (result) {\n          setValue(result.user.photoURL)\n          setTimeout(() => {\n            history.push(`${process.env.PUBLIC_URL}/dashboard/default`)\n          }, 200)\n        })\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\n          \"Oppss.. The password is invalid or the user does not have a password.\"\n        )\n      }, 200)\n    }\n  }\n  const twitterAuth = async () => {\n    try {\n      app\n        .auth()\n        .signInWithPopup(twitterProvider)\n        .then(function (result) {\n          setValue(result.user.photoURL)\n          setTimeout(() => {\n            history.push(`${process.env.PUBLIC_URL}/dashboard/default`)\n          }, 200)\n        })\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\n          \"Oppss.. The password is invalid or the user does not have a password.\"\n        )\n      }, 200)\n    }\n  }\n  const githubAuth = async () => {\n    try {\n      app\n        .auth()\n        .signInWithPopup(githubProvider)\n        .then(function (result) {\n          setValue(result.user.photoURL)\n          setTimeout(() => {\n            history.push(`${process.env.PUBLIC_URL}/dashboard/default`)\n          }, 200)\n        })\n    } catch (error) {\n      setTimeout(() => {\n        toast.error(\n          \"Oppss.. The password is invalid or the user does not have a password.\"\n        )\n      }, 200)\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"page-wrapper\">\n        <div className=\"container-fluid p-0\">\n          {/* <!-- login page start--> */}\n          <div className=\"authentication-main\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"auth-innerright\">\n                  <div className=\"authentication-box\">\n                    <div className=\"text-center\">\n                      <img src={logo} alt=\"\" />\n                    </div>\n                    <div className=\"card mt-4\">\n                      <div className=\"card-body\">\n                        <div className=\"text-center\">\n                          <h4>관리자 로그인</h4>\n                          <h6>아이디와 비밀번호를 입력해주세요</h6>\n                        </div>\n                        <form className=\"theme-form\">\n                          <div className=\"form-group\">\n                            <label className=\"col-form-label pt-0\">\n                              아이디\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"email\"\n                              name=\"email\"\n                              value={email}\n                              onChange={(e) => setEmail(e.target.value)}\n                              placeholder=\"Email address\"\n                            />\n                            {/* {errors.email && 'Email is required'} */}\n                          </div>\n                          <div className=\"form-group\">\n                            <label className=\"col-form-label\">비밀번호</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"password\"\n                              name=\"password\"\n                              value={password}\n                              onChange={(e) => setPassword(e.target.value)}\n                            />\n                            {/* {errors.password && 'Email is required'} */}\n                          </div>\n                          <div className=\"checkbox p-0\">\n                            <input id=\"checkbox1\" type=\"checkbox\" />\n                            <label htmlFor=\"checkbox1\">아이디 기억하기</label>\n                          </div>\n                          <div className=\"form-group form-row mt-3 mb-0\">\n                            <button\n                              className=\"btn btn-primary btn-block\"\n                              type=\"button\"\n                              onClick={() => loginAuth()}\n                            >\n                              Login\n                            </button>\n                          </div>\n                          {/* <div className=\"login-divider\"></div>\n                                                    <div className=\"social mt-3\">\n                                                        <div className=\"form-group btn-showcase d-flex\">\n                                                            <button className=\"btn social-btn btn-fb d-inline-block\" type=\"button\" onClick={facebookAuth}> <i className=\"fa fa-facebook\"></i></button>\n                                                            <button className=\"btn social-btn btn-twitter d-inline-block\" type=\"button\" onClick={googleAuth}><i className=\"fa fa-google\"></i></button>\n                                                            <button className=\"btn social-btn btn-google d-inline-block\" type=\"button\" onClick={twitterAuth}><i className=\"fa fa-twitter\"></i></button>\n                                                            <button className=\"btn social-btn btn-github d-inline-block\" type=\"button\" onClick={githubAuth}><i className=\"fa fa-github\"></i></button>\n                                                        </div>\n                                                    </div> */}\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <ToastContainer />\n          {/* <!-- login page end--> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(Signin)\n"]},"metadata":{},"sourceType":"module"}