{"ast":null,"code":"import _defineProperty from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/benner/DropEn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst DropEn = () => {\n  // specify upload params and url for your files\n  const getUploadParams = ({\n    meta\n  }) => {\n    return {\n      url: \"https://httpbin.org/post\"\n    };\n  }; // called every time a file's `status` changes\n\n\n  const handleChangeStatus = (files, status) => {\n    // 파일정보\n    if (status === \"done\") {\n      setEnBanner([...EnBanner, _objectSpread({}, files.meta)]);\n    }\n  }; // receives array of files that are done uploading when submit button is clicked\n\n\n  const handleSubmit = (files, allFiles) => {\n    console.log(allFiles);\n    allFiles.forEach(f => f.remove()); // toast.success(\"이미지를 업로드중입니다..!\")\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uC601\\uBB38\\uBC30\\uB108\\uC774\\uBBF8\\uC9C0\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"dropzone dropzone-info\",\n    id: \"fileTypeValidation\",\n    action: \"/upload.php\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 5 // onSubmit={handleSubmit}\n    ,\n    accept: \"image/*,audio/*,video/*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))))));\n};\n\nexport default DropEn;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/benner/DropEn.js"],"names":["React","Fragment","Dropzone","ToastContainer","toast","DropEn","getUploadParams","meta","url","handleChangeStatus","files","status","setEnBanner","EnBanner","handleSubmit","allFiles","console","log","forEach","f","remove"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,yCAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB;AACA,QAAMC,eAAe,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACpC,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAP;AACD,GAFD,CAFmB,CAKnB;;;AAEA,QAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C;AACA,QAAIA,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,WAAW,CAAC,CAAC,GAAGC,QAAJ,oBAAmBH,KAAK,CAACH,IAAzB,EAAD,CAAX;AACD;AACF,GALD,CAPmB,CAcnB;;;AACA,QAAMO,YAAY,GAAG,CAACJ,KAAD,EAAQK,QAAR,KAAqB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAA,IAAAA,QAAQ,CAACG,OAAT,CAAkBC,CAAD,IAAOA,CAAC,CAACC,MAAF,EAAxB,EAFwC,CAGxC;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,EAAE,EAAC,oBAFL;AAGE,IAAA,MAAM,EAAC,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,eAAe,EAAEd,eADnB;AAEE,IAAA,cAAc,EAAEG,kBAFlB;AAGE,IAAA,QAAQ,EAAE,CAHZ,CAIE;AAJF;AAKE,IAAA,MAAM,EAAC,yBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CAJF,CADF,CADF,CADF;AA4BD,CAjDD;;AAmDA,eAAeJ,MAAf","sourcesContent":["import React, { Fragment } from \"react\"\n\nimport \"react-dropzone-uploader/dist/styles.css\"\nimport Dropzone from \"react-dropzone-uploader\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\n\nconst DropEn = () => {\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => {\n    return { url: \"https://httpbin.org/post\" }\n  }\n  // called every time a file's `status` changes\n\n  const handleChangeStatus = (files, status) => {\n    // 파일정보\n    if (status === \"done\") {\n      setEnBanner([...EnBanner, { ...files.meta }])\n    }\n  }\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    console.log(allFiles)\n    allFiles.forEach((f) => f.remove())\n    // toast.success(\"이미지를 업로드중입니다..!\")\n  }\n\n  return (\n    <div>\n      <div className=\"col-sm-12\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>영문배너이미지</h5>\n          </div>\n          <div className=\"card-body\">\n            <form\n              className=\"dropzone dropzone-info\"\n              id=\"fileTypeValidation\"\n              action=\"/upload.php\"\n            >\n              <div className=\"dz-message needsclick\">\n                <Dropzone\n                  getUploadParams={getUploadParams}\n                  onChangeStatus={handleChangeStatus}\n                  maxFiles={5}\n                  // onSubmit={handleSubmit}\n                  accept=\"image/*,audio/*,video/*\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DropEn\n"]},"metadata":{},"sourceType":"module"}