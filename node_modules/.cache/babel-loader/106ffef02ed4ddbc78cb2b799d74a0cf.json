{"ast":null,"code":"import _defineProperty from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_EMAILS, GET_ALL_EMAILS, GET_EMAIL_TYPES, UPDATE_EMAIL_TYPES } from '../constant/actionTypes';\nimport { data } from '../data/email';\nconst initial_state = {\n  allEmails: data,\n  singleData: [],\n  types: [],\n  loading: false\n};\nexport default ((state = initial_state, action) => {\n  switch (action.type) {\n    case GET_EMAILS:\n      return _objectSpread({}, state);\n\n    case GET_ALL_EMAILS:\n      return _objectSpread({}, state, {\n        allEmails: data\n      });\n\n    case GET_EMAIL_TYPES:\n      const getTypes = action.payload;\n      return _objectSpread({}, state, {\n        loading: true,\n        types: getTypes\n      });\n\n    case UPDATE_EMAIL_TYPES:\n      const singleEmail = state.allEmails.reduce((cartAcc, item) => {\n        if (item.id === action.payload.id) {\n          action.payload.favourite = !action.payload.favourite;\n          cartAcc.push(_objectSpread({}, item, {\n            favourite: action.payload.favourite\n          }));\n        } else {\n          cartAcc.push(item);\n        }\n\n        return cartAcc;\n      }, []);\n      return _objectSpread({}, state, {\n        loading: true,\n        singleData: singleEmail,\n        allEmails: singleEmail\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/reducers/email.reducer.js"],"names":["GET_EMAILS","GET_ALL_EMAILS","GET_EMAIL_TYPES","UPDATE_EMAIL_TYPES","data","initial_state","allEmails","singleData","types","loading","state","action","type","getTypes","payload","singleEmail","reduce","cartAcc","item","id","favourite","push"],"mappings":";;;;;;AAAA,SACIA,UADJ,EAEIC,cAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAKO,yBALP;AAOA,SAASC,IAAT,QAAqB,eAArB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAEF,IADO;AAElBG,EAAAA,UAAU,EAAE,EAFM;AAGlBC,EAAAA,KAAK,EAAE,EAHW;AAIlBC,EAAAA,OAAO,EAAE;AAJS,CAAtB;AAOA,gBAAe,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKZ,UAAL;AACI,+BAAYU,KAAZ;;AAEJ,SAAKT,cAAL;AACI,+BAAYS,KAAZ;AAAmBJ,QAAAA,SAAS,EAAEF;AAA9B;;AAEJ,SAAKF,eAAL;AACI,YAAMW,QAAQ,GAAGF,MAAM,CAACG,OAAxB;AACA,+BAAYJ,KAAZ;AAAmBD,QAAAA,OAAO,EAAE,IAA5B;AAAkCD,QAAAA,KAAK,EAAEK;AAAzC;;AAEJ,SAAKV,kBAAL;AACI,YAAMY,WAAW,GAAGL,KAAK,CAACJ,SAAN,CAAgBU,MAAhB,CAAuB,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAC1D,YAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAA/B,EAAmC;AAC/BR,UAAAA,MAAM,CAACG,OAAP,CAAeM,SAAf,GAA2B,CAACT,MAAM,CAACG,OAAP,CAAeM,SAA3C;AACAH,UAAAA,OAAO,CAACI,IAAR,mBAAkBH,IAAlB;AAAwBE,YAAAA,SAAS,EAAET,MAAM,CAACG,OAAP,CAAeM;AAAlD;AACH,SAHD,MAGO;AACHH,UAAAA,OAAO,CAACI,IAAR,CAAaH,IAAb;AACH;;AACD,eAAOD,OAAP;AACH,OARmB,EAQjB,EARiB,CAApB;AASA,+BAAYP,KAAZ;AAAmBD,QAAAA,OAAO,EAAE,IAA5B;AAAkCF,QAAAA,UAAU,EAAEQ,WAA9C;AAA2DT,QAAAA,SAAS,EAAES;AAAtE;;AAEJ;AAAS,+BAAYL,KAAZ;AAxBb;AA0BH,CA3BD","sourcesContent":["import {\n    GET_EMAILS,\n    GET_ALL_EMAILS,\n    GET_EMAIL_TYPES,\n    UPDATE_EMAIL_TYPES\n} from '../constant/actionTypes';\n\nimport { data } from '../data/email';\n\nconst initial_state = {\n    allEmails: data,\n    singleData: [],\n    types: [],\n    loading: false\n};\n\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case GET_EMAILS:\n            return { ...state };\n\n        case GET_ALL_EMAILS:\n            return { ...state, allEmails: data };\n\n        case GET_EMAIL_TYPES:\n            const getTypes = action.payload;\n            return { ...state, loading: true, types: getTypes };\n\n        case UPDATE_EMAIL_TYPES:\n            const singleEmail = state.allEmails.reduce((cartAcc, item) => {\n                if (item.id === action.payload.id) {\n                    action.payload.favourite = !action.payload.favourite\n                    cartAcc.push({ ...item, favourite: action.payload.favourite })\n                } else {\n                    cartAcc.push(item)\n                }\n                return cartAcc;\n            }, [])\n            return { ...state, loading: true, singleData: singleEmail, allEmails: singleEmail };\n\n        default: return { ...state };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}