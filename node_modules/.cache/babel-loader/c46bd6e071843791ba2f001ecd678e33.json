{"ast":null,"code":"import _slicedToArray from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/Notice/NoticeListUser.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../assets/css/layout.css\";\nimport NewCard from \"../components/common/NewCard\";\nimport PagnationTool from \"../PagnationTool\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport axios from \"axios\";\n\nconst NoticeListUser = () => {\n  const history = useHistory();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        photoIndex = _useState4[0],\n        setPhotoIndex = _useState4[1]; // let 데이터 = useContext(데이터context);\n\n\n  let form = new FormData();\n  form.append(\"index\", 1);\n  useEffect(() => {\n    axios.post(\"/notice/listU\", form).then(response => {\n      console.log(response.data);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(NewCard, {\n    title: \"\\uACF5\\uC9C0\\uC0AC\\uD56D \\uB9AC\\uC2A4\\uD2B8\",\n    parent: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uAD00\\uB9AC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bennerContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\uC720\\uC800\\uC6A9 \\uACF5\\uC9C0\\uC0AC\\uD56D\"), React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm\",\n    onClick: () => {\n      history.push(\"/add/notice/user\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\uC720\\uC800\\uC6A9 \\uACF5\\uC9C0\\uC0AC\\uD56D\\uC791\\uC131\\uD558\\uAE30\")), React.createElement(\"div\", {\n    className: \"card-block row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12 col-lg-12 col-xl-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\uC791\\uC131\\uC77C\\uC2DC\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\uC81C\\uBAA9\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))))));\n};\n\nexport default NoticeListUser;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/Notice/NoticeListUser.js"],"names":["React","useContext","useState","useEffect","useHistory","NewCard","PagnationTool","Lightbox","axios","NoticeListUser","history","isOpen","setIsOpen","photoIndex","setPhotoIndex","form","FormData","append","post","then","response","console","log","data","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,gCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;;AAD2B,oBAECF,QAAQ,CAAC,KAAD,CAFT;AAAA;AAAA,QAEpBS,MAFoB;AAAA,QAEZC,SAFY;;AAAA,qBAGSV,QAAQ,CAAC,CAAD,CAHjB;AAAA;AAAA,QAGpBW,UAHoB;AAAA,QAGRC,aAHQ,kBAI3B;;;AAEA,MAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,CAArB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACU,IAAN,CAAW,eAAX,EAA4BH,IAA5B,EAAkCI,IAAlC,CAAwCC,QAAD,IAAc;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,0CACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,6CAAf;AAA0B,IAAA,MAAM,EAAC,sCAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,EAEE;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,OAAO,CAACc,IAAR,CAAa,kBAAb;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,EAIE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF,CADF,CAZF,CADF,CADF;AAoJD,CAlKD;;AAoKA,eAAef,cAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"../assets/css/layout.css\"\nimport NewCard from \"../components/common/NewCard\"\nimport PagnationTool from \"../PagnationTool\"\nimport Lightbox from \"react-image-lightbox\"\nimport \"react-image-lightbox/style.css\"\nimport axios from \"axios\"\n\nconst NoticeListUser = () => {\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState(false)\n  const [photoIndex, setPhotoIndex] = useState(0)\n  // let 데이터 = useContext(데이터context);\n\n  let form = new FormData()\n  form.append(\"index\", 1)\n  useEffect(() => {\n    axios.post(\"/notice/listU\", form).then((response) => {\n      console.log(response.data)\n    })\n  }, [])\n\n  return (\n    <>\n      <NewCard title=\"공지사항 리스트\" parent=\"공지사항관리\">\n        <div className=\"bennerContent\">\n          <h5>유저용 공지사항</h5>\n          <button\n            className=\"btn btn-danger btn-sm\"\n            onClick={() => {\n              history.push(\"/add/notice/user\")\n            }}\n          >\n            유저용 공지사항작성하기\n          </button>\n        </div>\n        <div className=\"card-block row\">\n          <div className=\"col-sm-12 col-lg-12 col-xl-12\">\n            <div className=\"table-responsive\">\n              <table className=\"table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\"></th>\n                    <th scope=\"col\">작성일시</th>\n\n                    <th scope=\"col\">제목</th>\n                    <th scope=\"col\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* {dummyData.map((a) => {\n                    return (\n                      <tr>\n                        <th scope=\"row\" key={a.id}>\n                          1\n                        </th>\n                        <td>{a.date}</td>\n                        <td>{a.facility}</td>\n                        <td>한국제목</td>\n                        <td>\n                          <button\n                            className=\"btn btn-square btn-warning btn-xs\"\n                            type=\"button\"\n                          >\n                            삭제\n                          </button>\n                          &nbsp; &nbsp;\n                          <button className=\"edit-button\">수정</button>{' '}\n                          <button\n                            className=\"btn btn-square btn-secondary active btn-xs\"\n                            type=\"button\"\n                            onClick={() => {\n                              history.push(`/notice/update/${a.id}`)\n                            }}\n                          >\n                            수정\n                          </button>\n                        </td>\n                      </tr>\n                    )\n                  })} */}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        {/* <PagnationTool /> */}\n      </NewCard>\n      {/* <Breadcrumb title=\"배너관리\" parent=\"배너관리\" />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"bennerContent\">\n                  <h5>배너관리</h5>\n                  <button\n                    id=\"bnr-btn\"\n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => {\n                      history.push('/banneradd/');\n                    }}\n                  >\n                    배너등록\n                  </button>\n                </div>\n                <div className=\"card-block row\">\n                  <div className=\"col-sm-12 col-lg-12 col-xl-12\">\n                    <div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\"></th>\n                            <th scope=\"col\">노출순위</th>\n                            <th scope=\"col\">작성일시</th>\n                            <th scope=\"col\">대표이미지</th>\n                            <th scope=\"col\"></th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {dummyData.map((a) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\" key={a.id}>\n                                  1\n                                </th>\n                                <td>{a.facility}</td>\n                                <td>{a.date}</td>\n                                <td>{a.sortation}</td>\n                                <td>\n                                  <button className=\"cancel-btn\">취소</button>\n                                  &nbsp; &nbsp;\n                                  <button className=\"edit-button\">\n                                    수정\n                                  </button>{' '}\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      {/* {isOpen && (\n        <Lightbox\n          mainSrc={images[photoIndex]}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          imageTitle={photoIndex + 1 + \"/\" + images.length}\n          onCloseRequest={() => setIsOpen(false)}\n          onMovePrevRequest={() =>\n            setPhotoIndex({\n              photoIndex: (photoIndex + images.length - 1) % images.length,\n            })\n          }\n          onMoveNextRequest={() =>\n            setPhotoIndex({\n              photoIndex: (photoIndex + 1) % images.length,\n            })\n          }\n        />\n      )} */}\n    </>\n  )\n}\n\nexport default NoticeListUser\n"]},"metadata":{},"sourceType":"module"}