{"ast":null,"code":"import _slicedToArray from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/icons/themifyIcons.js\";\nimport React, { Fragment, useState } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport data from '../../data/icons/themifyData';\nimport IconMarkUp from './icon-markup';\n\nconst ThemifyIcons = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        iTag = _useState2[0],\n        setiTag = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        icon = _useState4[0],\n        setIcon = _useState4[1];\n\n  const getItag = tag => {\n    setiTag({\n      iTag: '<i className= \"' + tag + '\"></i>'\n    });\n    setIcon({\n      icon: '' + tag + ' fa-5x'\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    title: \"Themify\",\n    parent: \"Icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, data.map((icons, index) => {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"digits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Arrows & Direction\"), \" Icons\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row icon-lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, icons.directional.map((icon, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-sm-6 col-lg-4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"\".concat(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \" \", icon);\n    }))))), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"digits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Web App\"), \" Icons\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row icon-lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, icons.webapp.map((icon, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-sm-6 col-lg-4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"\".concat(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \" \", icon);\n    }))))), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"digits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Control\"), \" Icons\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row icon-lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, icons.control.map((icon, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-sm-6 col-lg-4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"\".concat(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \" \", icon);\n    }))))), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"digits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Text Editor\"), \" Icons\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row icon-lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, icons.texteditor.map((icon, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-sm-6 col-lg-4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"\".concat(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \" \", icon);\n    }))))), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"digits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Brand\"), \" Icons\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row icon-lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, icons.brand.map((icon, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-sm-6 col-lg-4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"\".concat(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), \" \", icon);\n    }))))));\n  })), React.createElement(IconMarkUp, {\n    itag: iTag,\n    icons: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }));\n};\n\nexport default ThemifyIcons;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/icons/themifyIcons.js"],"names":["React","Fragment","useState","Breadcrumb","data","IconMarkUp","ThemifyIcons","iTag","setiTag","icon","setIcon","getItag","tag","map","icons","index","directional","i","e","webapp","control","texteditor","brand"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Breadcrumb from '../common/breadcrumb';\nimport data from '../../data/icons/themifyData';\nimport IconMarkUp from './icon-markup';\n\nconst ThemifyIcons = () => {\n    const [iTag, setiTag] = useState('');\n    const [icon, setIcon] = useState('');\n    \n    const getItag = (tag) => {\n        setiTag({\n            iTag: '<i className= \"' + tag + '\"></i>',\n        })\n        setIcon({\n            icon : '' + tag + ' fa-5x'\n        })\n    }\n    return (\n        <Fragment>\n            <Breadcrumb title=\"Themify\" parent=\"Icons\" />\n\n            <div className=\"container-fluid\">\n                {\n                    data.map((icons, index) => {\n                        return (\n                            <div className=\"row\" key={index}>\n                                <div className=\"col-sm-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">Arrows & Direction</span> Icons</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row icon-lists\">\n                                                {icons.directional.map((icon, i) => {\n                                                    return (\n                                                        <div className=\"col-sm-6 col-lg-4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </div>\n                                                    )\n                                                })\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">Web App</span> Icons</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row icon-lists\">\n                                                {icons.webapp.map((icon, i) => {\n                                                    return (\n                                                        <div className=\"col-sm-6 col-lg-4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </div>\n                                                    )\n                                                })\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">Control</span> Icons</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row icon-lists\">\n                                                {icons.control.map((icon, i) => {\n                                                    return (\n                                                        <div className=\"col-sm-6 col-lg-4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </div>\n                                                    )\n                                                })\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">Text Editor</span> Icons</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row icon-lists\">\n                                                {icons.texteditor.map((icon, i) => {\n                                                    return (\n                                                        <div className=\"col-sm-6 col-lg-4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </div>\n                                                    )\n                                                })\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h5 className=\"m-b-0\"><span className=\"digits\">Brand</span> Icons</h5>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row icon-lists\">\n                                                {icons.brand.map((icon, i) => {\n                                                    return (\n                                                        <div className=\"col-sm-6 col-lg-4\" key={i} onClick={(e) => getItag(icon)}>\n                                                            <i className={`${icon}`}></i> {icon}\n                                                        </div>\n                                                    )\n                                                })\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <IconMarkUp itag={iTag} icons={icon} />\n        </Fragment>\n    );\n};\n\nexport default ThemifyIcons;"]},"metadata":{},"sourceType":"module"}