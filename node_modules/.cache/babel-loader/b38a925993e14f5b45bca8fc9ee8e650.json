{"ast":null,"code":"import * as types from '../constant/actionTypes';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Products from '../data/products';\nexport const getProductList = () => ({\n  type: types.GET_ALL_PRODUCT\n});\nexport const getList = () => ({\n  type: types.GET_LIST,\n  payload: Products\n});\nexport const selectedItem = productId => ({\n  type: types.SELECTED_PRODUCT,\n  payload: {\n    productId\n  }\n});\nexport const getSingleItem = productId => ({\n  type: types.GET_SINGLE_ITEM,\n  payload: {\n    productId\n  }\n}); //its all use for cart\n\nexport const addToCart = (product, qty) => dispatch => {\n  dispatch(addToCartUnsafe(product, qty));\n};\nexport const addToCartAndRemoveWishlist = (product, qty) => dispatch => {\n  dispatch(addToCartUnsafe(product, qty));\n};\nexport const addToCartUnsafe = (product, qty) => ({\n  type: types.ADD_TO_CART,\n  payload: {\n    product,\n    qty\n  }\n});\nexport const removeFromCart = product_id => dispatch => {\n  dispatch({\n    type: types.REMOVE_FROM_CART,\n    product_id\n  });\n};\nexport const incrementQty = (product, qty) => dispatch => {\n  dispatch(addToCartUnsafe(product, qty));\n};\nexport const decrementQty = productId => dispatch => {\n  dispatch({\n    type: types.DECREMENT_QTY,\n    productId\n  });\n}; //it seems that I should probably use this as the basis for \"Wishlist\"\n\nexport const addToWishlist = product => dispatch => {\n  dispatch(addToWishlistUnsafe(product));\n};\nexport const addToWishlistUnsafe = product => ({\n  type: types.ADD_TO_WISHLIST,\n  product\n});\nexport const removeFromWishlist = product_id => dispatch => {\n  dispatch({\n    type: types.REMOVE_FROM_WISHLIST,\n    product_id\n  });\n}; // Filters\n\nexport const filterBrand = brand => ({\n  type: types.FILTER_BRAND,\n  brand\n});\nexport const filterColor = color => ({\n  type: types.FILTER_COLOR,\n  color\n});\nexport const filterPrice = value => ({\n  type: types.FILTER_PRICE,\n  value\n});\nexport const filterSort = sort_by => ({\n  type: types.SORT_BY,\n  payload: sort_by\n}); // Currency\n\nexport const changeCurrency = symbol => ({\n  type: types.CHANGE_CURRENCY,\n  symbol\n});","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/actions/ecommerce.actions.js"],"names":["types","Products","getProductList","type","GET_ALL_PRODUCT","getList","GET_LIST","payload","selectedItem","productId","SELECTED_PRODUCT","getSingleItem","GET_SINGLE_ITEM","addToCart","product","qty","dispatch","addToCartUnsafe","addToCartAndRemoveWishlist","ADD_TO_CART","removeFromCart","product_id","REMOVE_FROM_CART","incrementQty","decrementQty","DECREMENT_QTY","addToWishlist","addToWishlistUnsafe","ADD_TO_WISHLIST","removeFromWishlist","REMOVE_FROM_WISHLIST","filterBrand","brand","FILTER_BRAND","filterColor","color","FILTER_COLOR","filterPrice","value","FILTER_PRICE","filterSort","sort_by","SORT_BY","changeCurrency","symbol","CHANGE_CURRENCY"],"mappings":"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","sourcesContent":["import * as types from '../constant/actionTypes'\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Products from '../data/products';\n\nexport const getProductList = () => ({\n    type: types.GET_ALL_PRODUCT\n});\n\nexport const getList = () => ({\n    type: types.GET_LIST,\n    payload: Products\n});\n\nexport const selectedItem = (productId) => ({\n    type: types.SELECTED_PRODUCT,\n    payload: { productId }\n});\n\nexport const getSingleItem = (productId) => ({\n    type: types.GET_SINGLE_ITEM,\n    payload: { productId }\n})\n\n//its all use for cart\nexport const addToCart = (product, qty) => (dispatch) => {\n    dispatch(addToCartUnsafe(product, qty))\n}\nexport const addToCartAndRemoveWishlist = (product, qty) => (dispatch) => {\n    dispatch(addToCartUnsafe(product, qty));\n}\nexport const addToCartUnsafe = (product, qty) => ({\n    type: types.ADD_TO_CART,\n    payload: { product, qty }\n\n});\nexport const removeFromCart = product_id => (dispatch) => {\n    dispatch({\n        type: types.REMOVE_FROM_CART,\n        product_id\n    })\n};\n\nexport const incrementQty = (product, qty) => (dispatch) => {\n    dispatch(addToCartUnsafe(product, qty))\n}\nexport const decrementQty = productId => (dispatch) => {\n    dispatch({\n        type: types.DECREMENT_QTY,\n        productId\n    })\n};\n\n//it seems that I should probably use this as the basis for \"Wishlist\"\nexport const addToWishlist = (product) => (dispatch) => {\n    dispatch(addToWishlistUnsafe(product))\n}\n\nexport const addToWishlistUnsafe = (product) => ({\n    type: types.ADD_TO_WISHLIST,\n    product\n});\nexport const removeFromWishlist = product_id => (dispatch) => {\n    dispatch({\n        type: types.REMOVE_FROM_WISHLIST,\n        product_id\n    })\n};\n\n// Filters\nexport const filterBrand = (brand) => ({\n    type: types.FILTER_BRAND,\n    brand\n});\nexport const filterColor = (color) => ({\n    type: types.FILTER_COLOR,\n    color\n});\nexport const filterPrice = (value) => ({\n    type: types.FILTER_PRICE,\n    value\n});\nexport const filterSort = (sort_by) => ({\n    type: types.SORT_BY,\n    payload: sort_by\n});\n\n// Currency\nexport const changeCurrency = (symbol) => ({\n    type: types.CHANGE_CURRENCY,\n    symbol\n});\n"]},"metadata":{},"sourceType":"module"}