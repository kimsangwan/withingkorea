{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/src/util/Pagenation.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { pathExists } from \"fs-extra\";\n\nconst Pagenation = ({\n  lists,\n  count\n}) => {\n  // // datatable select\n  // 한 블럭에서 보여줄 페이지갯수\n  const [per, setPer] = useState(20); // pagination initialState\n\n  const [arr, setArr] = useState([]);\n  const [page, setPage] = useState({\n    start: 0,\n    end: 10,\n    current: 1\n  }); // pagination test 를 위한 + 50\n\n  const total = Math.ceil(count / per);\n  const array = [];\n\n  for (let i = 0; i < total; i++) {\n    array.push(i + 1);\n  }\n\n  useEffect(() => {\n    setArr(array.slice(page.start, page.end));\n  }, [per]); // pagination ++\n\n  const onPageUp = () => {\n    if (page.current < arr[arr.length - 1]) {\n      setPage({ ...page,\n        current: page.current + 1\n      });\n    } else if (page.current % page.end === 0 && page.end < total) {\n      setPage({\n        start: page.start + 1,\n        end: page.end + 1,\n        current: page.current + 1\n      });\n      setArr(array.slice(page.start + 1, page.end + 1));\n    }\n  }; // pagination --\n\n\n  const onPageDown = () => {\n    if (page.current > arr[0]) {\n      setPage({ ...page,\n        current: page.current - 1\n      });\n    } else if (page.current % arr[0] === 0 && page.start >= 1) {\n      setPage({\n        start: page.start - 1,\n        end: page.end - 1,\n        current: page.current - 1\n      });\n      setArr(array.slice(page.start - 1, page.end - 1));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, \"Displaying { 1 - \", data.length, \" } of { \", data.length, \" } records\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: per,\n    onChange: e => setPer(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"20\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"50\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"100\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: onPageDown,\n    className: page.current === arr[0] ? \"disable\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uC804\"), arr.map(val => /*#__PURE__*/React.createElement(\"li\", {\n    key: val,\n    className: page.current === val ? \"focus\" : \"\",\n    onClick: () => setPage({ ...page,\n      current: val\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, val)), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: onPageUp,\n    className: page.current === arr.length ? \"disable\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"\\uB2E4\\uC74C\"))));\n};\n\nexport default Pagenation;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/util/Pagenation.js"],"names":["React","useState","useEffect","pathExists","Pagenation","lists","count","per","setPer","arr","setArr","page","setPage","start","end","current","total","Math","ceil","array","i","push","slice","onPageUp","length","onPageDown","data","e","target","value","map","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { pathExists } from \"fs-extra\"\n\nconst Pagenation = ({ lists, count }) => {\n  // // datatable select\n  // 한 블럭에서 보여줄 페이지갯수\n  const [per, setPer] = useState(20)\n  // pagination initialState\n  const [arr, setArr] = useState([])\n  const [page, setPage] = useState({\n    start: 0,\n    end: 10,\n    current: 1\n  })\n\n  // pagination test 를 위한 + 50\n  const total = Math.ceil(count / per)\n  const array = []\n  for (let i = 0; i < total; i++) {\n    array.push(i + 1)\n  }\n\n  useEffect(() => {\n    setArr(array.slice(page.start, page.end))\n  }, [per])\n\n  // pagination ++\n  const onPageUp = () => {\n    if (page.current < arr[arr.length - 1]) {\n      setPage({ ...page, current: page.current + 1 })\n    } else if (page.current % page.end === 0 && page.end < total) {\n      setPage({\n        start: page.start + 1,\n        end: page.end + 1,\n        current: page.current + 1\n      })\n      setArr(array.slice(page.start + 1, page.end + 1))\n    }\n  }\n  // pagination --\n  const onPageDown = () => {\n    if (page.current > arr[0]) {\n      setPage({ ...page, current: page.current - 1 })\n    } else if (page.current % arr[0] === 0 && page.start >= 1) {\n      setPage({\n        start: page.start - 1,\n        end: page.end - 1,\n        current: page.current - 1\n      })\n      setArr(array.slice(page.start - 1, page.end - 1))\n    }\n  }\n\n  return (\n    <div className=\"pagination-wrapper\">\n      Displaying &#123; 1 - {data.length} &#125; of &#123; {data.length} &#125;\n      records\n      <div className=\"pagination-total\">\n        <select value={per} onChange={e => setPer(e.target.value)}>\n          <option value=\"20\">20</option>\n          <option value=\"50\">50</option>\n          <option value=\"100\">100</option>\n        </select>\n        <ul className=\"pagination\">\n          <li\n            onClick={onPageDown}\n            className={page.current === arr[0] ? \"disable\" : \"\"}\n          >\n            이전\n          </li>\n          {arr.map(val => (\n            <li\n              key={val}\n              className={page.current === val ? \"focus\" : \"\"}\n              onClick={() => setPage({ ...page, current: val })}\n            >\n              {val}\n            </li>\n          ))}\n          <li\n            onClick={onPageUp}\n            className={page.current === arr.length ? \"disable\" : \"\"}\n          >\n            다음\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Pagenation\n"]},"metadata":{},"sourceType":"module"}