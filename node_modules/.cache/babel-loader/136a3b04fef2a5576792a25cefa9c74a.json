{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/src/hoc/auth.js\";\nimport Cookie from \"js-cookie\";\nimport React, { useEffect } from \"react\";\nimport { message } from \"antd\";\nimport axios from \"axios\";\nexport default function (Component) {\n  function auth(props) {\n    // const history = useHistory()\n    // if (!Cookie.get(\"token\")) {\n    //   props.history.push(\"/\")\n    //   message.error(\"관리자 로그인후에 이용해주세요\")\n    //   //   alert(\"로그인후 이용하세요\")\n    // }\n    const token = Cookie.get(\"token\");\n    useEffect(() => {\n      effect;\n      return () => {\n        cleanup;\n      };\n    }, [input]);\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return auth;\n}","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/hoc/auth.js"],"names":["Cookie","React","useEffect","message","axios","Component","auth","props","token","get","effect","cleanup","input"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,UAASC,SAAT,EAAoB;AACjC,WAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,KAAK,GAAGR,MAAM,CAACS,GAAP,CAAW,OAAX,CAAd;AACAP,IAAAA,SAAS,CAAC,MAAM;AACdQ,MAAAA,MAAM;AACN,aAAO,MAAM;AACXC,QAAAA,OAAO;AACR,OAFD;AAGD,KALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAOA,wBAAO,oBAAC,SAAD,oBAAeL,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SAAOD,IAAP;AACD","sourcesContent":["import Cookie from \"js-cookie\"\nimport React, { useEffect } from \"react\"\nimport { message } from \"antd\"\nimport axios from \"axios\"\n\nexport default function(Component) {\n  function auth(props) {\n    // const history = useHistory()\n    // if (!Cookie.get(\"token\")) {\n    //   props.history.push(\"/\")\n    //   message.error(\"관리자 로그인후에 이용해주세요\")\n    //   //   alert(\"로그인후 이용하세요\")\n    // }\n    const token = Cookie.get(\"token\")\n    useEffect(() => {\n      effect\n      return () => {\n        cleanup\n      }\n    }, [input])\n\n    return <Component {...props} />\n  }\n\n  return auth\n}\n"]},"metadata":{},"sourceType":"module"}