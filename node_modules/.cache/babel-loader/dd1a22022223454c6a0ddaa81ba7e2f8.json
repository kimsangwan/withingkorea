{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/src/hoc/auth.js\";\nimport Cookie from \"js-cookie\";\nimport React from \"react\";\nimport { message } from \"antd\";\nimport axios from \"axios\";\nexport default function (Component) {\n  async function auth(props) {\n    // //   const history = useHistory()\n    // if (!Cookie.get(\"token\")) {\n    //   // props.history.push(\"/\")\n    //   // message.error(\"관리자 로그인후에 이용해주세요\")\n    //   //   alert(\"로그인후 이용하세요\")\n    // }\n    try {\n      const cookie = Cookie.get(\"token\");\n      const {\n        data\n      } = await axios.post(\"/api/v1/state/tokenState\");\n    } catch (error) {}\n\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return auth;\n}","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/hoc/auth.js"],"names":["Cookie","React","message","axios","Component","auth","props","cookie","get","data","post","error"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,UAASC,SAAT,EAAoB;AACjC,iBAAeC,IAAf,CAAoBC,KAApB,EAA2B;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,QAAI;AACF,YAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAP,CAAW,OAAX,CAAf;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMN,KAAK,CAACO,IAAN,CAAW,0BAAX,CAAvB;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc,CAAE;;AAElB,wBAAO,oBAAC,SAAD,oBAAeL,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SAAOD,IAAP;AACD","sourcesContent":["import Cookie from \"js-cookie\"\nimport React from \"react\"\nimport { message } from \"antd\"\nimport axios from \"axios\"\n\nexport default function(Component) {\n  async function auth(props) {\n    // //   const history = useHistory()\n    // if (!Cookie.get(\"token\")) {\n    //   // props.history.push(\"/\")\n    //   // message.error(\"관리자 로그인후에 이용해주세요\")\n    //   //   alert(\"로그인후 이용하세요\")\n    // }\n    try {\n      const cookie = Cookie.get(\"token\")\n\n      const { data } = await axios.post(\"/api/v1/state/tokenState\")\n    } catch (error) {}\n\n    return <Component {...props} />\n  }\n\n  return auth\n}\n"]},"metadata":{},"sourceType":"module"}