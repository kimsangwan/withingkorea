{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/advance/drag-n-drop/dragNDropComp.js\";\nimport React, { Fragment } from 'react';\nimport Breadcrumb from '../../common/breadcrumb';\nimport dragula from 'react-dragula';\n\nconst DragNDropComp = () => {\n  const dragulaDecorator = componentBackingInstance => {\n    if (componentBackingInstance) {\n      let options = {};\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n  const dragulaDecoratorSpill = componentBackingInstance => {\n    if (componentBackingInstance) {\n      let options = {\n        isContainer: function (el) {\n          return false;\n        },\n        moves: function (el, source, handle, sibling) {\n          return true;\n        },\n        accepts: function (el, target, source, sibling) {\n          return true;\n        },\n        invalid: function (el, handle) {\n          return false;\n        },\n        direction: 'vertical',\n        copy: false,\n        copySortSource: false,\n        revertOnSpill: true,\n        removeOnSpill: true,\n        mirrorContainer: document.body,\n        ignoreInputTextSelection: true\n      };\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n  const dragulaDecoratorRight = componentBackingInstance => {\n    if (componentBackingInstance) {\n      let options = {\n        copyItem: (el, target, source, sibling) => {\n          return sibling.id === 'left';\n        },\n        accepts: (el, target, source, sibling) => {\n          // To avoid dragging from right to left container\n          return target.id === 'left';\n        },\n        copy: true,\n        copySortSource: true,\n        removeOnSpill: false,\n        mirrorContainer: document.getElementById('right')\n      };\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    title: \"Drag-N-Drop\",\n    parent: \"Advance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Click And Drag\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row ui-sortable small-drag\",\n    id: \"draggableMultiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    ref: dragulaDecorator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"You can move these elements between these two containers\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Moving them anywhere else isn't quite possible\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"There's also the possibility of moving elements around in the same container, changing their position\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"This is the default use case. You only need to specify the containers you want to use\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"More interactive use cases lie ahead\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Make sure to check out the documentation on GitHub!\")))))), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Spill Drag N Drop\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row ui-sortable\",\n    id: \"draggableMultiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    ref: dragulaDecoratorSpill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"You can move these elements between these two containers\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Moving them anywhere else isn't quite possible\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"There's also the possibility of moving elements around in the same container, changing their position\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"This is the default use case. You only need to specify the containers you want to use\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"You can move these elements between these two containers\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Moving them anywhere else isn't quite possible\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Make sure to check out the documentation on GitHub!\")))))), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Copy Drag N Drop\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row ui-sortable\",\n    id: \"draggableMultiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    id: \"right\",\n    ref: dragulaDecoratorRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"There's also the possibility of moving elements around in the same container, changing their position\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"This is the default use case. You only need to specify the containers you want to use\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"You can move these elements between these two containers\"))))))));\n};\n\nexport default DragNDropComp;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/advance/drag-n-drop/dragNDropComp.js"],"names":["React","Fragment","Breadcrumb","dragula","DragNDropComp","dragulaDecorator","componentBackingInstance","options","dragulaDecoratorSpill","isContainer","el","moves","source","handle","sibling","accepts","target","invalid","direction","copy","copySortSource","revertOnSpill","removeOnSpill","mirrorContainer","document","body","ignoreInputTextSelection","dragulaDecoratorRight","copyItem","id","getElementById"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Breadcrumb from '../../common/breadcrumb';\n\nimport dragula from 'react-dragula';\n\nconst DragNDropComp = () => {\n\n  const dragulaDecorator = (componentBackingInstance) => {\n    if (componentBackingInstance) {\n      let options = {};\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n  const dragulaDecoratorSpill = (componentBackingInstance) => {\n    if (componentBackingInstance) {\n      let options = {\n        isContainer: function (el) { return false; },\n        moves: function (el, source, handle, sibling) { return true; },\n        accepts: function (el, target, source, sibling) { return true; },\n        invalid: function (el, handle) { return false; },\n        direction: 'vertical',\n        copy: false,\n        copySortSource: false,\n        revertOnSpill: true,\n        removeOnSpill: true,\n        mirrorContainer: document.body,\n        ignoreInputTextSelection: true\n      };\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n\n  const dragulaDecoratorRight = (componentBackingInstance) => {\n    if (componentBackingInstance) {\n      let options = {\n        copyItem: (el, target, source, sibling) => {\n          return sibling.id === 'left';\n        },\n        accepts: (el, target, source, sibling) => {\n          // To avoid dragging from right to left container\n          return target.id === 'left';\n        },\n        copy: true,\n        copySortSource: true,\n        removeOnSpill: false,\n        mirrorContainer: document.getElementById('right'),\n      };\n      dragula([componentBackingInstance], options);\n    }\n  };\n\n\n\n  return (\n    <Fragment>\n      <Breadcrumb title=\"Drag-N-Drop\" parent=\"Advance\" />\n      <div className=\"container-fluid\">\n\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>Click And Drag</h5>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row ui-sortable small-drag\" id=\"draggableMultiple\">\n              <div className=\"col-sm-12\">\n                <div className='container' ref={dragulaDecorator}>\n                  <div>You can move these elements between these two containers</div>\n                  <div>Moving them anywhere else isn't quite possible</div>\n                  <div>There's also the possibility of moving elements around in the same container, changing their position</div>\n                  <div>This is the default use case. You only need to specify the containers you want to use</div>\n                  <div>More interactive use cases lie ahead</div>\n                  <div>Make sure to check out the documentation on GitHub!</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 2nd draggable */}\n\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>Spill Drag N Drop</h5>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row ui-sortable\" id=\"draggableMultiple\">\n              <div className=\"col-sm-12\">\n                <div className='container' ref={dragulaDecoratorSpill}>\n                  <div>You can move these elements between these two containers</div>\n                  <div>Moving them anywhere else isn't quite possible</div>\n                  <div>There's also the possibility of moving elements around in the same container, changing their position</div>\n                  <div>This is the default use case. You only need to specify the containers you want to use</div>\n                  <div>You can move these elements between these two containers</div>\n                  <div>Moving them anywhere else isn't quite possible</div>\n                  <div>Make sure to check out the documentation on GitHub!</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 3d drag and drop */}\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>Copy Drag N Drop</h5>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row ui-sortable\" id=\"draggableMultiple\">\n              <div className=\"col-sm-12\">\n                <div className='container' id=\"right\" ref={dragulaDecoratorRight}>\n                  <div>There's also the possibility of moving elements around in the same container, changing their position</div>\n                  <div>This is the default use case. You only need to specify the containers you want to use</div>\n                  <div>You can move these elements between these two containers</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default DragNDropComp;"]},"metadata":{},"sourceType":"module"}