{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/base/timepickerComponent/timepicker-one.js\";\nimport React from 'react';\nimport TimePicker from 'react-times'; // use material theme\n\nimport 'react-times/css/material/default.css'; // or you can use classic theme\n\nimport 'react-times/css/classic/default.css';\n\nclass TimePickerOne extends React.Component {\n  constructor(props) {\n    super(props);\n    const meridiem = props.meridiem,\n          focused = props.focused,\n          showTimezone = props.showTimezone,\n          timezone = props.timezone;\n    let hour = '';\n    let minute = '';\n    this.state = {\n      hour,\n      minute,\n      meridiem,\n      focused,\n      timezone,\n      showTimezone\n    };\n    this.onFocusChange = this.onFocusChange.bind(this);\n    this.onFocusChange1 = this.onFocusChange1.bind(this);\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.handleFocusedChange = this.handleFocusedChange.bind(this);\n  }\n\n  onTimeChange(options) {\n    const hour = options.hour,\n          minute = options.minute,\n          meridiem = options.meridiem;\n    this.setState({\n      hour,\n      minute,\n      meridiem\n    });\n  }\n\n  onFocusChange(focused) {\n    this.setState({\n      focused\n    });\n  }\n\n  onFocusChange1(focused1) {\n    this.setState({\n      focused1\n    });\n  }\n\n  handleFocusedChange() {\n    const focused = this.state.focused;\n    this.setState({\n      focused: !focused\n    });\n  }\n\n  get basicTrigger() {\n    const _this$state = this.state,\n          hour = _this$state.hour,\n          minute = _this$state.minute;\n    return React.createElement(\"div\", {\n      onClick: this.handleFocusedChange,\n      className: \"time_picker_trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Click to open panel\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), hour, \":\", minute));\n  }\n\n  get customTrigger() {\n    return React.createElement(\"div\", {\n      onClick: this.handleFocusedChange,\n      className: \"time_picker_trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }\n\n  get trigger() {\n    const customTriggerId = this.props.customTriggerId;\n    const triggers = {\n      0: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      1: this.basicTrigger,\n      2: this.customTrigger\n    };\n    return triggers[customTriggerId] || null;\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          hour = _this$state2.hour,\n          minute = _this$state2.minute;\n    return React.createElement(\"div\", {\n      className: \"time_picker_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(TimePicker, {\n      trigger: this.trigger,\n      focused: false,\n      colorPalette: \"dark\",\n      onFocusChange: this.onFocusChange,\n      timeMode: \"12\",\n      onTimeChange: this.onTimeChange,\n      showTimezone: true,\n      time: hour && minute ? \"\".concat(hour, \":\").concat(minute) : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TimePickerOne;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/base/timepickerComponent/timepicker-one.js"],"names":["React","TimePicker","TimePickerOne","Component","constructor","props","meridiem","focused","showTimezone","timezone","hour","minute","state","onFocusChange","bind","onFocusChange1","onTimeChange","handleFocusedChange","options","setState","focused1","basicTrigger","customTrigger","trigger","customTriggerId","triggers","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TimePicker from 'react-times';\n// use material theme\nimport 'react-times/css/material/default.css';\n// or you can use classic theme\nimport 'react-times/css/classic/default.css';\n\nclass TimePickerOne extends React.Component {\n    constructor(props) {\n        super(props);\n        const { meridiem, focused, showTimezone, timezone } = props;\n        let hour = '';\n        let minute = '';\n        this.state = {\n            hour,\n            minute,\n            meridiem,\n            focused,\n            timezone,\n            showTimezone,\n        };\n\n        this.onFocusChange = this.onFocusChange.bind(this);\n        this.onFocusChange1 = this.onFocusChange1.bind(this);\n        this.onTimeChange = this.onTimeChange.bind(this);\n        this.handleFocusedChange = this.handleFocusedChange.bind(this);\n    }\n\n    onTimeChange(options) {\n        const {\n            hour,\n            minute,\n            meridiem\n        } = options;\n\n        this.setState({ hour, minute, meridiem });\n    }\n\n    onFocusChange(focused) {\n        this.setState({ focused });\n    }\n    onFocusChange1(focused1) {\n        this.setState({ focused1 });\n    }\n\n    handleFocusedChange() {\n        const { focused } = this.state;\n        this.setState({ focused: !focused });\n    }\n\n    get basicTrigger() {\n        const { hour, minute } = this.state;\n        return (\n            <div\n                onClick={this.handleFocusedChange}\n                className=\"time_picker_trigger\"\n            >\n                <div>\n                    Click to open panel<br />\n                    {hour}:{minute}\n                </div>\n            </div>\n        );\n    }\n\n    get customTrigger() {\n        return (\n            <div\n                onClick={this.handleFocusedChange}\n                className=\"time_picker_trigger\"\n            >\n            </div>\n        );\n    }\n\n    get trigger() {\n        const { customTriggerId } = this.props;\n        const triggers = {\n            0: (<div />),\n            1: this.basicTrigger,\n            2: this.customTrigger\n        };\n        return triggers[customTriggerId] || null;\n    }\n\n    render() {\n        const {\n            hour,\n            minute,\n        } = this.state;\n\n        return (\n            <div className=\"time_picker_wrapper\">\n                <TimePicker\n                    trigger={this.trigger}\n                    focused={false}\n                    colorPalette=\"dark\"\n                    onFocusChange={this.onFocusChange}\n                    timeMode=\"12\"\n                    onTimeChange={this.onTimeChange}\n                    showTimezone={true}\n                    time={hour && minute ? `${hour}:${minute}` : null}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TimePickerOne;\n"]},"metadata":{},"sourceType":"module"}