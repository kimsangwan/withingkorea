{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/src/User/UserList.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport \"../assets/css/layout.css\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Breadcrumb from \"../components/common/breadcrumb\";\nimport Pagenation from \"../util/Pagenation\";\nimport { message } from \"antd\";\n\nconst UserList = () => {\n  const [searchText, setSerchText] = useState(\"\");\n  const [userlist, setUserlist] = useState({});\n  useEffect(() => {\n    let form = new FormData();\n    form.append(\"index\", 1);\n    axios.post(\"/api/v1/member/list\", form, {\n      headers: {\n        Authorization: Cookie.get(\"token\")\n      }\n    }).then(response => {\n      if (response.data.status === \"success\") {\n        setUserlist({\n          lists: response.data.data.list,\n          count: response.data.data.count\n        });\n      }\n    }).catch(err => {\n      message.warning(\"불러오기실패\");\n      console.log(err);\n    });\n  }, []);\n\n  const onSearchHandler = () => {\n    if (!searchText) {\n      message.warning(\"한글자이상입력하세요\");\n      return;\n    }\n\n    const form = new FormData();\n    form.append(\"index\", 1);\n    form.append(\"search\", searchText);\n    axios.post(\"/api/v1/member/list\", form, {\n      headers: {\n        Authorization: Cookie.get(\"token\")\n      }\n    }).then(response => {\n      console.log(response.data.message);\n\n      if (response.data.status === \"success\") {\n        setUserlist({\n          lists: response.data.data.list,\n          count: response.data.data.count\n        });\n      } else {\n        if (response.data.message === \"NoResult\") {\n          message.warning(\"일치하는 유저가 없습니다\");\n        }\n\n        setUserlist([]);\n      }\n    }).catch(err => {\n      message.warning(\"검색한데이터를 불러오지못했습니다\");\n    });\n  };\n\n  const history = useHistory();\n\n  const fn = async d => {\n    let form = new FormData();\n    form.append(\"index\", d);\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/v1/guide/list\", form, {\n        headers: {\n          Authorization: Cookie.get(\"token\")\n        }\n      });\n\n      if (data.status == \"success\") {\n        setUserlist({\n          lists: data.data.list,\n          count: data.data.count\n        });\n      }\n    } catch (error) {\n      alert(\"페이지를 로딩하는데 실패했어요.\");\n    } // 이전 다음 페이지를 위한 api호출\n    // axios로 서버 통신\n    // success시 nomalList 업데이트\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    title: \"\\uC720\\uC800\\uAD00\\uB9AC\",\n    parent: \"\\uC720\\uC800\\uAD00\\uB9AC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-block row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 col-lg-12 col-xl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"\\uB2C9\\uB124\\uC784\\uC73C\\uB85C \\uAC80\\uC0C9\\uD558\\uC138\\uC694\",\n    onChange: e => setSerchText(e.target.value),\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        onSearchHandler();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: \"\",\n    className: \"icon-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }, \".NO\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }, \"\\uAC00\\uC785\\uC77C\\uC2DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  }, \"\\uC5B8\\uC5B4\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, userlist.lists && userlist.lists.map((list, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, index), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, list.registered), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, list.lang), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, list.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, list.nickname), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"  btn btn-secondary btn-sm\",\n      onClick: () => {\n        history.push(`/userdetails/${list.account_no}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }\n    }, \"\\uBCF4\\uAE30\")));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagenation-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Pagenation, {\n    data: userlist,\n    fn: fn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default React.memo(UserList);","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/User/UserList.js"],"names":["React","useContext","useState","useEffect","axios","Cookie","useHistory","useParams","Breadcrumb","Pagenation","message","UserList","searchText","setSerchText","userlist","setUserlist","form","FormData","append","post","headers","Authorization","get","then","response","data","status","lists","list","count","catch","err","warning","console","log","onSearchHandler","history","fn","d","error","alert","e","target","value","key","map","index","registered","lang","email","nickname","push","account_no","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\n\nimport \"../assets/css/layout.css\"\nimport axios from \"axios\"\nimport Cookie from \"js-cookie\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport Breadcrumb from \"../components/common/breadcrumb\"\nimport Pagenation from \"../util/Pagenation\"\nimport { message } from \"antd\"\nconst UserList = () => {\n  const [searchText, setSerchText] = useState(\"\")\n  const [userlist, setUserlist] = useState({})\n\n  useEffect(() => {\n    let form = new FormData()\n    form.append(\"index\", 1)\n\n    axios\n      .post(\"/api/v1/member/list\", form, {\n        headers: {\n          Authorization: Cookie.get(\"token\")\n        }\n      })\n      .then(response => {\n        if (response.data.status === \"success\") {\n          setUserlist({\n            lists: response.data.data.list,\n            count: response.data.data.count\n          })\n        }\n      })\n      .catch(err => {\n        message.warning(\"불러오기실패\")\n        console.log(err)\n      })\n  }, [])\n\n  const onSearchHandler = () => {\n    if (!searchText) {\n      message.warning(\"한글자이상입력하세요\")\n      return\n    }\n\n    const form = new FormData()\n    form.append(\"index\", 1)\n    form.append(\"search\", searchText)\n\n    axios\n      .post(\"/api/v1/member/list\", form, {\n        headers: {\n          Authorization: Cookie.get(\"token\")\n        }\n      })\n      .then(response => {\n        console.log(response.data.message)\n        if (response.data.status === \"success\") {\n          setUserlist({\n            lists: response.data.data.list,\n            count: response.data.data.count\n          })\n        } else {\n          if (response.data.message === \"NoResult\") {\n            message.warning(\"일치하는 유저가 없습니다\")\n          }\n          setUserlist([])\n        }\n      })\n      .catch(err => {\n        message.warning(\"검색한데이터를 불러오지못했습니다\")\n      })\n  }\n\n  const history = useHistory()\n\n  const fn = async d => {\n    let form = new FormData()\n    form.append(\"index\", d)\n\n    try {\n      const { data } = await axios.post(\"/api/v1/guide/list\", form, {\n        headers: {\n          Authorization: Cookie.get(\"token\")\n        }\n      })\n\n      if (data.status == \"success\") {\n        setUserlist({\n          lists: data.data.list,\n          count: data.data.count\n        })\n      }\n    } catch (error) {\n      alert(\"페이지를 로딩하는데 실패했어요.\")\n    }\n\n    // 이전 다음 페이지를 위한 api호출\n    // axios로 서버 통신\n    // success시 nomalList 업데이트\n  }\n\n  return (\n    <div>\n      <Breadcrumb title=\"유저관리\" parent=\"유저관리\" />\n      <div className=\"card\">\n        <div className=\"card-block row\">\n          <div className=\"col-sm-12 col-lg-12 col-xl-12\">\n            <div className=\"card-body\">\n              <div className=\"user-search-bar\">\n                <div className=\"search-input\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"닉네임으로 검색하세요\"\n                      onChange={e => setSerchText(e.target.value)}\n                      onKeyDown={e => {\n                        if (e.key === \"Enter\") {\n                          onSearchHandler()\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n                <div onClick={\"\"} className=\"icon-search\">\n                  <i className=\"fa fa-search\" />\n                </div>\n              </div>\n\n              <div className=\"table-responsive\">\n                <table className=\"table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">.NO</th>\n                      <th scope=\"col\">가입일시</th>\n                      <th scope=\"col\">언어</th>\n                      <th scope=\"col\">이메일</th>\n                      <th scope=\"col\">닉네임</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userlist.lists &&\n                      userlist.lists.map((list, index) => {\n                        return (\n                          <tr>\n                            <th scope=\"row\" key={index}>\n                              {index}\n                            </th>\n                            <td>{list.registered}</td>\n                            <td>{list.lang}</td>\n                            <td>{list.email}</td>\n                            <td>{list.nickname}</td>\n\n                            <td>\n                              <button\n                                className=\"  btn btn-secondary btn-sm\"\n                                onClick={() => {\n                                  history.push(\n                                    `/userdetails/${list.account_no}`\n                                  )\n                                }}\n                              >\n                                보기\n                              </button>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                  </tbody>\n                </table>\n                <div className=\"pagenation-box\">\n                  <Pagenation data={userlist} fn={fn} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(UserList)\n"]},"metadata":{},"sourceType":"module"}