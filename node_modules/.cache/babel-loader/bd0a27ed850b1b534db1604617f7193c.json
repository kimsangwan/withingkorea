{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/calender/calender2.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport Breadcrumb from \"../common/breadcrumb\";\n\nclass Calendar2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      calendarEvents: [{\n        title: \"Atlanta Monster\",\n        start: new Date(\"2019-04-04 00:00\"),\n        id: \"1001\"\n      }, {\n        title: \"My Favorite Murder\",\n        start: new Date(\"2019-04-05 00:00\"),\n        id: \"1002\"\n      }],\n      events: [{\n        title: \"Meeting\",\n        id: \"1\"\n      }, {\n        title: \"Party\",\n        id: \"2\"\n      }, {\n        title: \"Long Event\",\n        id: \"3\"\n      }, {\n        title: \"Lunch\",\n        id: \"4\"\n      }, {\n        title: \"Happy Hour\",\n        id: \"5\"\n      }]\n    };\n\n    this.eventClick = eventClick => {\n      Swal.fire({\n        title: eventClick.event.title,\n        html: \"<div class=\\\"table-responsive\\\">\\n      <table class=\\\"table\\\">\\n      <tbody>\\n      <tr >\\n      <td>Title</td>\\n      <td><strong>\" + eventClick.event.title + \"</strong></td>\\n      </tr>\\n      <tr >\\n      <td>Start Time</td>\\n      <td><strong>\\n      \" + eventClick.event.start + \"\\n      </strong></td>\\n      </tr>\\n      </tbody>\\n      </table>\\n      </div>\",\n        showCancelButton: true,\n        confirmButtonColor: \"#d33\",\n        cancelButtonColor: \"#3085d6\",\n        confirmButtonText: \"Remove Event\",\n        cancelButtonText: \"Close\"\n      }).then(result => {\n        if (result.value) {\n          eventClick.event.remove(); // It will remove event from the calendar\n\n          Swal.fire(\"Deleted!\", \"Your Event has been deleted.\", \"success\");\n        }\n      });\n    };\n  }\n\n  /**\n   * adding dragable properties to external events through javascript\n   */\n  componentDidMount() {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let title = eventEl.getAttribute(\"title\");\n        let id = eventEl.getAttribute(\"data\");\n        return {\n          title: title,\n          id: id\n        };\n      }\n    });\n  }\n  /**\n   * when we click on event we are displaying event details\n   */\n\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      parent: \"Calender\",\n      title: \"Draggable Calender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"DRAGGING EVENT\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"animated fadeIn demo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xl: 3,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"external-events\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" Events\")), this.state.events.map(event => React.createElement(\"div\", {\n      className: \"fc-event\",\n      title: event.title,\n      data: event.id,\n      key: event.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, event.title)))), React.createElement(Col, {\n      xl: 9,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      id: \"mycalendartest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      rerenderDelay: 10,\n      eventDurationEditable: false,\n      editable: true,\n      droppable: true,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.calendarEvents,\n      eventDrop: this.drop,\n      eventReceive: this.eventReceive,\n      eventClick: this.eventClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))))))))));\n  }\n\n}\n\nexport default Calendar2;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/calender/calender2.js"],"names":["React","Component","Fragment","Col","Row","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Draggable","Swal","Breadcrumb","Calendar2","state","calendarEvents","title","start","Date","id","events","eventClick","fire","event","html","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","remove","componentDidMount","draggableEl","document","getElementById","itemSelector","eventData","eventEl","getAttribute","render","map","left","center","right","calendarComponentRef","calendarWeekends","drop","eventReceive"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\n\nimport 'sweetalert2/src/sweetalert2.scss'\n\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport Breadcrumb from \"../common/breadcrumb\";\n\nclass Calendar2 extends Component {\n    state = {\n        calendarEvents: [\n            {\n                title: \"Atlanta Monster\",\n                start: new Date(\"2019-04-04 00:00\"),\n                id: \"1001\"\n            },\n            {\n                title: \"My Favorite Murder\",\n                start: new Date(\"2019-04-05 00:00\"),\n                id: \"1002\"\n            }\n        ],\n        events: [\n            { title: \"Meeting\", id: \"1\" },\n            { title: \"Party\", id: \"2\" },\n            { title: \"Long Event\", id: \"3\" },\n            { title: \"Lunch\", id: \"4\" },\n            { title: \"Happy Hour\", id: \"5\" }\n        ]\n    };\n\n    /**\n     * adding dragable properties to external events through javascript\n     */\n    componentDidMount() {\n        let draggableEl = document.getElementById(\"external-events\");\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function (eventEl) {\n                let title = eventEl.getAttribute(\"title\");\n                let id = eventEl.getAttribute(\"data\");\n                return {\n                    title: title,\n                    id: id\n                };\n            }\n        });\n    }\n\n    /**\n     * when we click on event we are displaying event details\n     */\n    eventClick = eventClick => {\n        Swal.fire({\n            title: eventClick.event.title,\n            html:\n                `<div class=\"table-responsive\">\n      <table class=\"table\">\n      <tbody>\n      <tr >\n      <td>Title</td>\n      <td><strong>` +\n                eventClick.event.title +\n                `</strong></td>\n      </tr>\n      <tr >\n      <td>Start Time</td>\n      <td><strong>\n      ` +\n                eventClick.event.start +\n                `\n      </strong></td>\n      </tr>\n      </tbody>\n      </table>\n      </div>`,\n\n            showCancelButton: true,\n            confirmButtonColor: \"#d33\",\n            cancelButtonColor: \"#3085d6\",\n            confirmButtonText: \"Remove Event\",\n            cancelButtonText: \"Close\"\n        }).then(result => {\n            if (result.value) {\n                eventClick.event.remove(); // It will remove event from the calendar\n                Swal.fire(\"Deleted!\", \"Your Event has been deleted.\", \"success\");\n            }\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <Breadcrumb parent=\"Calender\" title=\"Draggable Calender\" />\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h5>DRAGGING EVENT</h5>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"animated fadeIn demo-app\">\n                                        <Row>\n                                            <Col xl={3} md={4}>\n                                                <div\n                                                    id=\"external-events\"\n                                                >\n                                                    <p align=\"center\">\n                                                        <strong> Events</strong>\n                                                    </p>\n                                                    {this.state.events.map(event => (\n                                                        <div\n                                                            className=\"fc-event\"\n                                                            title={event.title}\n                                                            data={event.id}\n                                                            key={event.id}\n                                                        >\n                                                            {event.title}\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            </Col>\n\n                                            <Col xl={9} md={8}>\n                                                <div className=\"demo-app-calendar\" id=\"mycalendartest\">\n                                                    <FullCalendar\n                                                        defaultView=\"dayGridMonth\"\n                                                        header={{\n                                                            left: \"prev,next today\",\n                                                            center: \"title\",\n                                                            right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n                                                        }}\n                                                        rerenderDelay={10}\n                                                        eventDurationEditable={false}\n                                                        editable={true}\n                                                        droppable={true}\n                                                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                                                        ref={this.calendarComponentRef}\n                                                        weekends={this.state.calendarWeekends}\n                                                        events={this.state.calendarEvents}\n                                                        eventDrop={this.drop}\n                                                        eventReceive={this.eventReceive}\n                                                        eventClick={this.eventClick}\n                                                    />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n\n\n        );\n    }\n}\n\nexport default Calendar2;\n"]},"metadata":{},"sourceType":"module"}