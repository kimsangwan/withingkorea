{"ast":null,"code":"import Cookie from \"js-cookie\";\nimport React from \"react\";\nimport { message } from \"antd\";\nimport axios from \"axios\";\nexport default function (Component) {\n  async function auth(props) {\n    //   const history = useHistory()\n    // if (!Cookie.get(\"token\")) {\n    //   props.history.push(\"/\")\n    //   message.error(\"관리자 로그인후에 이용해주세요\")\n    //   //   alert(\"로그인후 이용하세요\")\n    // }\n    const token = Cookie.get(\"token\");\n    const res = await axios.post(\"/api/v1/state/tokenState\", {\n      headers: {\n        Authorization: token\n      }\n    });\n\n    if (res.data.status !== \"success\") {\n      props.history.push(\"/\");\n      message.error(\"관리자 로그인후에 이용해주세요\");\n    } // return <Component {...props} />\n\n  }\n\n  return auth;\n}","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/hoc/auth.js"],"names":["Cookie","React","message","axios","Component","auth","props","token","get","res","post","headers","Authorization","data","status","history","push","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,UAASC,SAAT,EAAoB;AACjC,iBAAeC,IAAf,CAAoBC,KAApB,EAA2B;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,KAAK,GAAGP,MAAM,CAACQ,GAAP,CAAW,OAAX,CAAd;AACA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAW,0BAAX,EAAuC;AACvDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL;AADR;AAD8C,KAAvC,CAAlB;;AAMA,QAAIE,GAAG,CAACI,IAAJ,CAASC,MAAT,KAAoB,SAAxB,EAAmC;AACjCR,MAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACAd,MAAAA,OAAO,CAACe,KAAR,CAAc,kBAAd;AACD,KAjBwB,CAmBzB;;AACD;;AAED,SAAOZ,IAAP;AACD","sourcesContent":["import Cookie from \"js-cookie\"\nimport React from \"react\"\nimport { message } from \"antd\"\nimport axios from \"axios\"\n\nexport default function(Component) {\n  async function auth(props) {\n    //   const history = useHistory()\n    // if (!Cookie.get(\"token\")) {\n    //   props.history.push(\"/\")\n    //   message.error(\"관리자 로그인후에 이용해주세요\")\n    //   //   alert(\"로그인후 이용하세요\")\n    // }\n    const token = Cookie.get(\"token\")\n    const res = await axios.post(\"/api/v1/state/tokenState\", {\n      headers: {\n        Authorization: token\n      }\n    })\n\n    if (res.data.status !== \"success\") {\n      props.history.push(\"/\")\n      message.error(\"관리자 로그인후에 이용해주세요\")\n    }\n\n    // return <Component {...props} />\n  }\n\n  return auth\n}\n"]},"metadata":{},"sourceType":"module"}