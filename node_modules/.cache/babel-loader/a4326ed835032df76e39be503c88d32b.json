{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/forms/wizard/registration.js\";\nimport React, { Fragment } from 'react';\nimport useForm from 'react-hook-form';\n\nconst Registration = () => {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors; // initialise the hook\n\n\n  const onSubmit = data => {\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"needs-validation\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"First name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationCustom01\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"First name\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), errors.firstName && 'First name is required', React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Looks good!\")), React.createElement(\"div\", {\n    className: \"col-md-12 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationCustom02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Last name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationCustom02\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Last name\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), errors.lastName && 'First name is required', React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Looks good!\")))))));\n};\n\nexport default Registration;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/forms/wizard/registration.js"],"names":["React","Fragment","useForm","Registration","register","handleSubmit","errors","onSubmit","data","alert","showMessages","required","firstName","lastName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA,mBACoBD,OAAO,EAD3B;AAAA,QACfE,QADe,YACfA,QADe;AAAA,QACLC,YADK,YACLA,YADK;AAAA,QACSC,MADT,YACSA,MADT,EAC+B;;;AAEtD,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AAErB,QAAIA,IAAI,KAAK,EAAb,EAAiB;AACbC,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACH,KAFD,MAEO;AACHH,MAAAA,MAAM,CAACI,YAAP;AACH;AACJ,GAPD;;AAQA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,QAAQ,EAAEL,YAAY,CAACE,QAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,EAAE,EAAC,oBAAnC;AAAwD,IAAA,IAAI,EAAC,WAA7D;AAAyE,IAAA,IAAI,EAAC,MAA9E;AAAqF,IAAA,WAAW,EAAC,YAAjG;AAA8G,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKL,MAAM,CAACM,SAAP,IAAoB,wBAHzB,EAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,EAAE,EAAC,oBAAnC;AAAwD,IAAA,IAAI,EAAC,UAA7D;AAAwE,IAAA,IAAI,EAAC,MAA7E;AAAoF,IAAA,WAAW,EAAC,WAAhG;AAA4G,IAAA,GAAG,EAAER,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKL,MAAM,CAACO,QAAP,IAAmB,wBAHxB,EAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAPJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAwBH,CAnCD;;AAqCA,eAAeV,YAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport useForm from 'react-hook-form'\n\nconst Registration = () => {\n    const { register, handleSubmit, errors } = useForm(); // initialise the hook\n\n    const onSubmit = data => {\n\n        if (data !== '') {\n            alert('You submitted the form and stuff!');\n        } else {\n            errors.showMessages();\n        }\n    };\n    return (\n        <Fragment>\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <form className=\"needs-validation\" onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"form-row\">\n                            <div className=\"col-md-12 mb-3\">\n                                <label htmlFor=\"validationCustom01\">First name</label>\n                                <input className=\"form-control\" id=\"validationCustom01\" name=\"firstName\" type=\"text\" placeholder=\"First name\" ref={register({ required: true })} />\n                                {errors.firstName && 'First name is required'}\n                                <div className=\"valid-feedback\">Looks good!</div>\n                            </div>\n                            <div className=\"col-md-12 mb-3\">\n                                <label htmlFor=\"validationCustom02\">Last name</label>\n                                <input className=\"form-control\" id=\"validationCustom02\" name=\"lastName\" type=\"text\" placeholder=\"Last name\" ref={register({ required: true })} />\n                                {errors.lastName && 'First name is required'}\n                                <div className=\"valid-feedback\">Looks good!</div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}