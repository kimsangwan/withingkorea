{"ast":null,"code":"import _slicedToArray from \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/forms/form-control/tooltipForm.js\";\nimport React, { useState } from 'react';\nimport useForm from 'react-hook-form';\n\nconst TooltipForm = () => {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors; // initialise the hook\n\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        validateClass = _useState2[0],\n        setValidateClass = _useState2[1];\n\n  const onSubmit = data => {\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"needs-validation tooltip-validation \".concat(validateClass ? 'validateClass' : ''),\n    noValidate: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationTooltip01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"First name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip01\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"First name\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, errors.firstName && 'First name is required'), React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Looks good!\")), React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationTooltip02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Last name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip02\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Last name\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, errors.lastName && 'Last name is required'), React.createElement(\"div\", {\n    className: \"valid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Looks good!\")), React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationCustomUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-text\",\n    id: \"validationTooltip03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"@\")), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip03\",\n    name: \"userName\",\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, errors.lastName && 'User name is required'), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Please choose a username.\")))), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationTooltip04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"City\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip04\",\n    name: \"city\",\n    type: \"text\",\n    placeholder: \"City\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, errors.city && 'Please provide a valid city'), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Please provide a valid city.\")), React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationTooltip05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"State\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip05\",\n    name: \"state\",\n    type: \"text\",\n    placeholder: \"State\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, errors.state && 'Please provide a valid state.'), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Please provide a valid state.\")), React.createElement(\"div\", {\n    className: \"col-md-3 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"validationTooltip06\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Zip\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"validationTooltip06\",\n    name: \"zip\",\n    type: \"text\",\n    placeholder: \"Zip\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, errors.zip && 'Please provide a valid zip.'), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Please provide a valid zip.\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkbox p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-check-input\",\n    id: \"invalidCheck\",\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"invalidCheck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Agree to terms and conditions\")), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"You must agree before submitting.\"))), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    onClick: () => setValidateClass(!validateClass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Submit form\")));\n};\n\nexport default TooltipForm;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/components/forms/form-control/tooltipForm.js"],"names":["React","useState","useForm","TooltipForm","register","handleSubmit","errors","validateClass","setValidateClass","onSubmit","data","alert","showMessages","required","firstName","lastName","city","state","zip"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react';\nimport useForm from 'react-hook-form'\n\nconst TooltipForm = () => {\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\n  const [validateClass , setValidateClass] = useState(false);\n  const onSubmit = data => {\n\n    if (data !== '') {\n      alert('You submitted the form and stuff!');\n    } else {\n      errors.showMessages();\n    }\n  };\n  return (\n    <div>\n      <form className={`needs-validation tooltip-validation ${validateClass ? 'validateClass' : ''}`} noValidate=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-row\">\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationTooltip01\">First name</label>\n            <input className=\"form-control\" id=\"validationTooltip01\" name=\"firstName\" type=\"text\" placeholder=\"First name\" ref={register({ required: true })} />\n            <span>{errors.firstName && 'First name is required'}</span>\n            <div className=\"valid-feedback\">Looks good!</div>\n          </div>\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationTooltip02\">Last name</label>\n            <input className=\"form-control\" id=\"validationTooltip02\" name=\"lastName\" type=\"text\" placeholder=\"Last name\" ref={register({ required: true })} />\n            <span>{errors.lastName && 'Last name is required'}</span>\n            <div className=\"valid-feedback\">Looks good!</div>\n          </div>\n          <div className=\"col-md-4 mb-3\">\n            <label htmlFor=\"validationCustomUsername\">Username</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\"><span className=\"input-group-text\" id=\"validationTooltip03\">@</span></div>\n              <input className=\"form-control\" id=\"validationTooltip03\" name=\"userName\" type=\"text\" placeholder=\"Username\" aria-describedby=\"inputGroupPrepend\" ref={register({ required: true })} />\n              <span>{errors.lastName && 'User name is required'}</span>\n              <div className=\"invalid-feedback\">Please choose a username.</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"col-md-6 mb-3\">\n            <label htmlFor=\"validationTooltip04\">City</label>\n            <input className=\"form-control\" id=\"validationTooltip04\" name=\"city\" type=\"text\" placeholder=\"City\" ref={register({ required: true })} />\n            <span>{errors.city && 'Please provide a valid city'}</span>\n            <div className=\"invalid-feedback\">Please provide a valid city.</div>\n          </div>\n          <div className=\"col-md-3 mb-3\">\n            <label htmlFor=\"validationTooltip05\">State</label>\n            <input className=\"form-control\" id=\"validationTooltip05\" name=\"state\" type=\"text\" placeholder=\"State\" ref={register({ required: true })} />\n            <span>{errors.state && 'Please provide a valid state.'}</span>\n            <div className=\"invalid-feedback\">Please provide a valid state.</div>\n          </div>\n          <div className=\"col-md-3 mb-3\">\n            <label htmlFor=\"validationTooltip06\">Zip</label>\n            <input className=\"form-control\" id=\"validationTooltip06\" name=\"zip\" type=\"text\" placeholder=\"Zip\" ref={register({ required: true })} />\n            <span>{errors.zip && 'Please provide a valid zip.'}</span>\n            <div className=\"invalid-feedback\">Please provide a valid zip.</div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check\">\n            <div className=\"checkbox p-0\">\n              <input className=\"form-check-input\" id=\"invalidCheck\" type=\"checkbox\" />\n              <label className=\"form-check-label\" htmlFor=\"invalidCheck\">Agree to terms and conditions</label>\n            </div>\n            <div className=\"invalid-feedback\">You must agree before submitting.</div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={() => setValidateClass(!validateClass)}>Submit form</button>\n      </form>\n    </div>\n  );\n};\n\nexport default TooltipForm;"]},"metadata":{},"sourceType":"module"}