{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/Notice/NoticeListUser.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../assets/css/layout.css\";\nimport NewCard from \"../components/common/NewCard\";\nimport PagnationTool from \"../PagnationTool\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport data from \"../data/email\";\n\nconst NoticeListUser = () => {\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0);\n  const [noticeLists, setNoticeLists] = useState([]); // let 데이터 = useContext(데이터context);\n\n  let form = new FormData();\n  form.append(\"index\", 1);\n  useEffect(() => {\n    axios.post(\"/api/v1/notice/listU\", form, {\n      headers: {\n        Authorization: Cookie.get(\"token\")\n      }\n    }).then(response => {\n      if (response.data.status === \"success\") {\n        setNoticeLists(response.data.data.list);\n      }\n    }).catch(err => {\n      alert(\"공지사항을 불러오는데 실패했습니다.\");\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NewCard, {\n    title: \"\\uACF5\\uC9C0\\uC0AC\\uD56D \\uB9AC\\uC2A4\\uD2B8\",\n    parent: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uAD00\\uB9AC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bennerContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"\\uC720\\uC800\\uC6A9 \\uACF5\\uC9C0\\uC0AC\\uD56D\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm\",\n    onClick: () => {\n      history.push(\"/add/notice/user\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"\\uC720\\uC800\\uC6A9 \\uACF5\\uC9C0\\uC0AC\\uD56D\\uC791\\uC131\\uD558\\uAE30\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-block row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 col-lg-12 col-xl-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"\\uC791\\uC131\\uC77C\\uC2DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"\\uC81C\\uBAA9\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, noticeLists.map((list, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      key: list.i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, list.notice_no), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, list.en_title, list.zh_title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, list.registered), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-square btn-warning btn-xs\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }\n    }, \"\\uC0AD\\uC81C\"), \"\\xA0 \\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-square btn-secondary active btn-xs\",\n      type: \"button\",\n      onClick: () => {\n        history.push(`/notice/update/${list.id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }\n    }, \"\\uC218\\uC815\")));\n  }), \" \")))))));\n};\n\nexport default NoticeListUser;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/Endless-react-admin-template/endless 1/src/Notice/NoticeListUser.js"],"names":["React","useContext","useState","useEffect","useHistory","NewCard","PagnationTool","Lightbox","axios","Cookie","data","NoticeListUser","history","isOpen","setIsOpen","photoIndex","setPhotoIndex","noticeLists","setNoticeLists","form","FormData","append","post","headers","Authorization","get","then","response","status","list","catch","err","alert","push","map","index","i","notice_no","en_title","zh_title","registered","id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"../assets/css/layout.css\"\nimport NewCard from \"../components/common/NewCard\"\nimport PagnationTool from \"../PagnationTool\"\nimport Lightbox from \"react-image-lightbox\"\nimport \"react-image-lightbox/style.css\"\nimport axios from \"axios\"\nimport Cookie from \"js-cookie\"\nimport data from \"../data/email\"\n\nconst NoticeListUser = () => {\n  const history = useHistory()\n  const [isOpen, setIsOpen] = useState(false)\n  const [photoIndex, setPhotoIndex] = useState(0)\n  const [noticeLists, setNoticeLists] = useState([])\n  // let 데이터 = useContext(데이터context);\n\n  let form = new FormData()\n  form.append(\"index\", 1)\n  useEffect(() => {\n    axios\n      .post(\"/api/v1/notice/listU\", form, {\n        headers: {\n          Authorization: Cookie.get(\"token\")\n        }\n      })\n      .then(response => {\n        if (response.data.status === \"success\") {\n          setNoticeLists(response.data.data.list)\n        }\n      })\n      .catch(err => {\n        alert(\"공지사항을 불러오는데 실패했습니다.\")\n      })\n  }, [])\n\n  return (\n    <>\n      <NewCard title=\"공지사항 리스트\" parent=\"공지사항관리\">\n        <div className=\"bennerContent\">\n          <h5>유저용 공지사항</h5>\n          <button\n            className=\"btn btn-danger btn-sm\"\n            onClick={() => {\n              history.push(\"/add/notice/user\")\n            }}\n          >\n            유저용 공지사항작성하기\n          </button>\n        </div>\n        <div className=\"card-block row\">\n          <div className=\"col-sm-12 col-lg-12 col-xl-12\">\n            <div className=\"table-responsive\">\n              <table className=\"table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\" />\n                    <th scope=\"col\">작성일시</th>\n\n                    <th scope=\"col\">제목</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {noticeLists.map((list, index) => {\n                    return (\n                      <tr>\n                        <th scope=\"row\" key={list.i}>\n                          {list.notice_no}\n                        </th>\n                        <td>\n                          {list.en_title}\n                          {list.zh_title}\n                        </td>\n                        <td>{list.registered}</td>\n                        <td>\n                          <button\n                            className=\"btn btn-square btn-warning btn-xs\"\n                            type=\"button\"\n                          >\n                            삭제\n                          </button>\n                          &nbsp; &nbsp;\n                          <button\n                            className=\"btn btn-square btn-secondary active btn-xs\"\n                            type=\"button\"\n                            onClick={() => {\n                              history.push(`/notice/update/${list.id}`)\n                            }}\n                          >\n                            수정\n                          </button>\n                        </td>\n                      </tr>\n                    )\n                  })}{\" \"}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        {/* <PagnationTool /> */}\n      </NewCard>\n      {/* <Breadcrumb title=\"배너관리\" parent=\"배너관리\" />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"bennerContent\">\n                  <h5>배너관리</h5>\n                  <button\n                    id=\"bnr-btn\"\n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => {\n                      history.push('/banneradd/');\n                    }}\n                  >\n                    배너등록\n                  </button>\n                </div>\n                <div className=\"card-block row\">\n                  <div className=\"col-sm-12 col-lg-12 col-xl-12\">\n                    <div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th scope=\"col\"></th>\n                            <th scope=\"col\">노출순위</th>\n                            <th scope=\"col\">작성일시</th>\n                            <th scope=\"col\">대표이미지</th>\n                            <th scope=\"col\"></th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {dummyData.map((a) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\" key={a.id}>\n                                  1\n                                </th>\n                                <td>{a.facility}</td>\n                                <td>{a.date}</td>\n                                <td>{a.sortation}</td>\n                                <td>\n                                  <button className=\"cancel-btn\">취소</button>\n                                  &nbsp; &nbsp;\n                                  <button className=\"edit-button\">\n                                    수정\n                                  </button>{' '}\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      {/* {isOpen && (\n        <Lightbox\n          mainSrc={images[photoIndex]}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          imageTitle={photoIndex + 1 + \"/\" + images.length}\n          onCloseRequest={() => setIsOpen(false)}\n          onMovePrevRequest={() =>\n            setPhotoIndex({\n              photoIndex: (photoIndex + images.length - 1) % images.length,\n            })\n          }\n          onMoveNextRequest={() =>\n            setPhotoIndex({\n              photoIndex: (photoIndex + 1) % images.length,\n            })\n          }\n        />\n      )} */}\n    </>\n  )\n}\n\nexport default NoticeListUser\n"]},"metadata":{},"sourceType":"module"}