{"ast":null,"code":"var _jsxFileName = \"/Users/gimsang-wan/Desktop/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8\\u110C\\u116E\\u11BC/Withing_admin/src/benner/DropEn.js\";\nimport React, { Fragment } from \"react\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\n\nconst DropEn = props => {\n  // specify upload params and url for your files\n  // const getUploadParams = ({ meta }) => {\n  //   return {\n  //     url: \"https://httpbin.org/post\"\n  //   }\n  // }\n  // called every time a file's `status` changes\n  const handleChangeStatus = async (files, status) => {\n    // 파일정보\n    try {\n      if (status === \"done\") {\n        const file = files.file;\n        const form = new FormData();\n        form.append(\"type\", \"A\");\n        form.append(\"file\", file);\n        const {\n          data\n        } = await axios.post(\"/api/v1/File/uploadFile\", form, {\n          headers: {\n            Authorization: Cookie.get(\"token\")\n          }\n        });\n        console.log(data);\n\n        if (data.status === \"success\") {\n          props.enImageNumber(data.message);\n        }\n      }\n    } catch (error) {\n      alert(\"이미지 업로드에 실패했습니다.\");\n    }\n  };\n\n  const getUploadParams = ({\n    meta\n  }) => {\n    return {\n      url: \"https://httpbin.org/post\"\n    };\n  }; // receives array of files that are done uploading when submit button is clicked\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"\\uC601\\uBB38\\uBC30\\uB108\\uC774\\uBBF8\\uC9C0\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"dropzone dropzone-info\",\n    id: \"fileTypeValidation\",\n    action: \"/upload.php\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message needsclick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 5,\n    accept: \"image/*,audio/*,video/*\",\n    styles: {\n      dropzone: {\n        width: 400,\n        height: 200\n      },\n      dropzoneActive: {\n        borderColor: \"green\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default DropEn;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/benner/DropEn.js"],"names":["React","Fragment","Dropzone","ToastContainer","toast","Cookie","axios","DropEn","props","handleChangeStatus","files","status","file","form","FormData","append","data","post","headers","Authorization","get","console","log","enImageNumber","message","error","alert","getUploadParams","meta","url","dropzone","width","height","dropzoneActive","borderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,yCAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,kBAAkB,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAClD;AACA,QAAI;AACF,UAAIA,MAAM,KAAK,MAAf,EAAuB;AACrB,cAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;AACA,cAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,QAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,GAApB;AACAF,QAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,IAApB;AAEA,cAAM;AAAEI,UAAAA;AAAF,YAAW,MAAMV,KAAK,CAACW,IAAN,CAAW,yBAAX,EAAsCJ,IAAtC,EAA4C;AACjEK,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAEd,MAAM,CAACe,GAAP,CAAW,OAAX;AADR;AADwD,SAA5C,CAAvB;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,YAAIA,IAAI,CAACL,MAAL,KAAgB,SAApB,EAA+B;AAC7BH,UAAAA,KAAK,CAACe,aAAN,CAAoBP,IAAI,CAACQ,OAAzB;AACD;AACF;AACF,KAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,GAvBD;;AAwBA,QAAMC,eAAe,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACpC,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAP;AACD,GAFD,CAjCsB,CAqCtB;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,EAAE,EAAC,oBAFL;AAGE,IAAA,MAAM,EAAC,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,eAAe,EAAEF,eADnB;AAEE,IAAA,cAAc,EAAElB,kBAFlB;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,IAAA,MAAM,EAAC,yBAJT;AAKE,IAAA,MAAM,EAAE;AACNqB,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADJ;AAENC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf;AAFV,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CALF,CADF,CADF,CADF;AAgCD,CAvED;;AAyEA,eAAe3B,MAAf","sourcesContent":["import React, { Fragment } from \"react\"\n\nimport \"react-dropzone-uploader/dist/styles.css\"\nimport Dropzone from \"react-dropzone-uploader\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport Cookie from \"js-cookie\"\nimport axios from \"axios\"\n\nconst DropEn = props => {\n  // specify upload params and url for your files\n  // const getUploadParams = ({ meta }) => {\n  //   return {\n  //     url: \"https://httpbin.org/post\"\n  //   }\n  // }\n  // called every time a file's `status` changes\n\n  const handleChangeStatus = async (files, status) => {\n    // 파일정보\n    try {\n      if (status === \"done\") {\n        const file = files.file\n        const form = new FormData()\n\n        form.append(\"type\", \"A\")\n        form.append(\"file\", file)\n\n        const { data } = await axios.post(\"/api/v1/File/uploadFile\", form, {\n          headers: {\n            Authorization: Cookie.get(\"token\")\n          }\n        })\n        console.log(data)\n        if (data.status === \"success\") {\n          props.enImageNumber(data.message)\n        }\n      }\n    } catch (error) {\n      alert(\"이미지 업로드에 실패했습니다.\")\n    }\n  }\n  const getUploadParams = ({ meta }) => {\n    return { url: \"https://httpbin.org/post\" }\n  }\n\n  // receives array of files that are done uploading when submit button is clicked\n\n  return (\n    <div>\n      <div className=\"col-sm-12\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h5>영문배너이미지</h5>\n          </div>\n          <div className=\"drop\" />\n          <div className=\"drop-box\">\n            <form\n              className=\"dropzone dropzone-info\"\n              id=\"fileTypeValidation\"\n              action=\"/upload.php\"\n            >\n              <div className=\"dz-message needsclick\">\n                <Dropzone\n                  getUploadParams={getUploadParams}\n                  onChangeStatus={handleChangeStatus}\n                  maxFiles={5}\n                  accept=\"image/*,audio/*,video/*\"\n                  styles={{\n                    dropzone: { width: 400, height: 200 },\n                    dropzoneActive: { borderColor: \"green\" }\n                  }}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DropEn\n"]},"metadata":{},"sourceType":"module"}