{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _keyCode = require('../constants/keyCode');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Thin layer between top-level container and rendering layer. Needed for\n * updates due to actions that are neither prop nor state changes.\n */\n\n\nfunction typeaheadInnerContainer(Typeahead) {\n  var WrappedTypeahead = function (_React$Component) {\n    _inherits(WrappedTypeahead, _React$Component);\n\n    function WrappedTypeahead() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, WrappedTypeahead);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WrappedTypeahead.__proto__ || Object.getPrototypeOf(WrappedTypeahead)).call.apply(_ref, [this].concat(args))), _this), _this._handleKeyDown = function (e) {\n        var _this$props = _this.props,\n            activeItem = _this$props.activeItem,\n            isMenuShown = _this$props.isMenuShown,\n            onActiveIndexChange = _this$props.onActiveIndexChange,\n            onActiveItemChange = _this$props.onActiveItemChange,\n            onHide = _this$props.onHide,\n            onKeyDown = _this$props.onKeyDown,\n            onSelectionAdd = _this$props.onSelectionAdd,\n            onShow = _this$props.onShow,\n            results = _this$props.results,\n            submitFormOnEnter = _this$props.submitFormOnEnter;\n\n        switch (e.keyCode) {\n          case _keyCode.UP:\n          case _keyCode.DOWN:\n            if (!isMenuShown) {\n              onShow();\n              break;\n            }\n\n            var activeIndex = _this.props.activeIndex; // Prevents input cursor from going to the beginning when pressing up.\n\n            e.preventDefault(); // Increment or decrement index based on user keystroke.\n\n            activeIndex += e.keyCode === _keyCode.UP ? -1 : 1; // Skip over any disabled options.\n\n            while (results[activeIndex] && results[activeIndex].disabled) {\n              activeIndex += e.keyCode === _keyCode.UP ? -1 : 1;\n            } // If we've reached the end, go back to the beginning or vice-versa.\n\n\n            if (activeIndex === results.length) {\n              activeIndex = -1;\n            } else if (activeIndex === -2) {\n              activeIndex = results.length - 1;\n            }\n\n            onActiveIndexChange(activeIndex);\n\n            if (activeIndex === -1) {\n              // Reset the active item if there is no active index.\n              onActiveItemChange(null);\n            }\n\n            break;\n\n          case _keyCode.ESC:\n          case _keyCode.TAB:\n            // Prevent closing dialogs.\n            e.keyCode === _keyCode.ESC && e.preventDefault();\n            onHide();\n            break;\n\n          case _keyCode.RETURN:\n            if (!isMenuShown) {\n              break;\n            } // Don't submit form if menu is shown and an item is active.\n\n\n            if (!submitFormOnEnter || activeItem) {\n              // Prevent submitting forms.\n              e.preventDefault();\n            }\n\n            if (activeItem) {\n              onSelectionAdd(activeItem);\n              break;\n            }\n\n            break;\n        }\n\n        onKeyDown(e);\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(WrappedTypeahead, [{\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        var allowNew = nextProps.allowNew,\n            onInitialItemChange = nextProps.onInitialItemChange,\n            results = nextProps.results; // Clear the initial item when there are no results.\n\n        if (!(allowNew || results.length)) {\n          onInitialItemChange(null);\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Typeahead, _extends({}, this.props, {\n          onKeyDown: this._handleKeyDown\n        }));\n      }\n    }]);\n\n    return WrappedTypeahead;\n  }(_react2.default.Component);\n\n  return WrappedTypeahead;\n}\n\nexports.default = typeaheadInnerContainer;","map":null,"metadata":{},"sourceType":"script"}