{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux'; // middlewares\n\nimport thunkMiddleware from 'redux-thunk'; // import logger from 'redux-logger'\n// Import custom components\n\nimport reducers from '../reducers/index';\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    return undefined;\n  }\n}\n/**\n * Create a Redux store that holds the app state.\n */\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunkMiddleware), //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\nwindow.devToolsExtension ? window.devToolsExtension() : function (f) {\n  return f;\n})); // eslint-disable-next-line\n\nconst unsubscribe = store.subscribe(() => {\n  const state = store.getState();\n  saveToLocalStorage(state);\n});\nexport default store;","map":{"version":3,"sources":["/Users/gimsang-wan/Desktop/작업중/Withing_admin/src/store/index.jsx"],"names":["createStore","applyMiddleware","compose","thunkMiddleware","reducers","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","undefined","store","window","devToolsExtension","f","unsubscribe","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CACA;AAEA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAGA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,MAAI;AACA,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACH,GAHD,CAGC,OAAMK,CAAN,EAAQ;AACL,WAAOC,SAAP;AACH;AACJ;AAED;;;;;AAGA,MAAMC,KAAK,GAAGd,WAAW,CAACI,QAAD,EAAaF,OAAO,CACzCD,eAAe,CAACE,eAAD,CAD0B,EAGzC;AACAY,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwD,UAAUC,CAAV,EAAa;AACjE,SAAOA,CAAP;AACH,CANwC,CAApB,CAAzB,C,CAQA;;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAN,CAAgB,MAAM;AACtC,QAAMb,KAAK,GAAGQ,KAAK,CAACM,QAAN,EAAd;AACAf,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACH,CAHmB,CAApB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\n\n// middlewares\nimport thunkMiddleware from 'redux-thunk'\n// import logger from 'redux-logger'\n\n// Import custom components\nimport reducers from '../reducers/index';\n\n\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    }catch(e){\n        return undefined\n    }\n}\n\n/**\n * Create a Redux store that holds the app state.\n */\nconst store = createStore(reducers,   compose(\n    applyMiddleware(thunkMiddleware),\n\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\n    window.devToolsExtension ? window.devToolsExtension() : function (f) {\n        return f;\n    }\n));\n// eslint-disable-next-line\nconst unsubscribe = store.subscribe(() => {\n    const state = store.getState();\n    saveToLocalStorage(state);\n});\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}